;buildInfoPackage: chisel3, version: 3.4.3, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit SimTop : 
  extmodule RAMHelper : 
    input clk : Clock
    input en : UInt<1>
    input rIdx : UInt<64>
    output rdata : UInt<64>
    input wIdx : UInt<64>
    input wdata : UInt<64>
    input wmask : UInt<64>
    input wen : UInt<1>
    
    defname = RAMHelper
    
    
  module IFU : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : {newPC : UInt<64>, valid : UInt<1>}, flip out : {flip pc : UInt<64>, flip instr : UInt<32>}}
    
    reg pc : UInt<64>, clock with : (reset => (reset, UInt<64>("h080000000"))) @[IFU.scala 14:19]
    node _pc_T = add(pc, UInt<3>("h04")) @[IFU.scala 15:49]
    node _pc_T_1 = tail(_pc_T, 1) @[IFU.scala 15:49]
    node _pc_T_2 = mux(io.in.valid, io.in.newPC, _pc_T_1) @[IFU.scala 15:19]
    pc <= _pc_T_2 @[IFU.scala 15:13]
    io.out.pc <= pc @[IFU.scala 16:13]
    inst ram of RAMHelper @[IFU.scala 18:19]
    ram.wen is invalid
    ram.wmask is invalid
    ram.wdata is invalid
    ram.wIdx is invalid
    ram.rdata is invalid
    ram.rIdx is invalid
    ram.en is invalid
    ram.clk is invalid
    ram.clk <= clock @[IFU.scala 19:14]
    node _ram_io_en_T = asUInt(reset) @[IFU.scala 20:30]
    node _ram_io_en_T_1 = eq(_ram_io_en_T, UInt<1>("h00")) @[IFU.scala 20:17]
    ram.en <= _ram_io_en_T_1 @[IFU.scala 20:14]
    node _idx_T = sub(pc, UInt<32>("h080000000")) @[IFU.scala 22:17]
    node _idx_T_1 = tail(_idx_T, 1) @[IFU.scala 22:17]
    node idx = shr(_idx_T_1, 3) @[IFU.scala 22:31]
    ram.rIdx <= idx @[IFU.scala 24:15]
    ram.wIdx is invalid @[IFU.scala 26:15]
    ram.wen <= UInt<1>("h00") @[IFU.scala 27:15]
    ram.wdata is invalid @[IFU.scala 28:16]
    ram.wmask is invalid @[IFU.scala 29:16]
    node _io_out_instr_T = bits(pc, 2, 2) @[IFU.scala 31:25]
    node _io_out_instr_T_1 = bits(ram.rdata, 63, 32) @[IFU.scala 31:34]
    node _io_out_instr_T_2 = bits(ram.rdata, 31, 0) @[IFU.scala 31:47]
    node _io_out_instr_T_3 = mux(_io_out_instr_T, _io_out_instr_T_1, _io_out_instr_T_2) @[IFU.scala 31:22]
    io.out.instr <= _io_out_instr_T_3 @[IFU.scala 31:16]
    
  module IDU : 
    input clock : Clock
    input reset : Reset
    output io : {in : {flip pc : UInt<64>, flip instr : UInt<32>}, out : {flip cf : {flip pc : UInt<64>, flip instr : UInt<32>}, ctrl : {src1Type : UInt<1>, src2Type : UInt<1>, funcType : UInt<3>, funcOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfrd : UInt<5>, rfWen : UInt<1>}, data : {src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64>}}}
    
    node src1Addr = bits(io.in.instr, 19, 15) @[IDU.scala 16:44]
    node src2Addr = bits(io.in.instr, 24, 20) @[IDU.scala 16:59]
    node rdAddr = bits(io.in.instr, 11, 7) @[IDU.scala 16:74]
    node _T = and(io.in.instr, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_1 = eq(UInt<5>("h013"), _T) @[Lookup.scala 31:38]
    node _T_2 = and(io.in.instr, UInt<32>("h0fc00707f")) @[Lookup.scala 31:38]
    node _T_3 = eq(UInt<13>("h01013"), _T_2) @[Lookup.scala 31:38]
    node _T_4 = and(io.in.instr, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_5 = eq(UInt<14>("h02013"), _T_4) @[Lookup.scala 31:38]
    node _T_6 = and(io.in.instr, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_7 = eq(UInt<14>("h03013"), _T_6) @[Lookup.scala 31:38]
    node _T_8 = and(io.in.instr, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_9 = eq(UInt<15>("h04013"), _T_8) @[Lookup.scala 31:38]
    node _T_10 = and(io.in.instr, UInt<32>("h0fc00707f")) @[Lookup.scala 31:38]
    node _T_11 = eq(UInt<15>("h05013"), _T_10) @[Lookup.scala 31:38]
    node _T_12 = and(io.in.instr, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_13 = eq(UInt<15>("h06013"), _T_12) @[Lookup.scala 31:38]
    node _T_14 = and(io.in.instr, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_15 = eq(UInt<15>("h07013"), _T_14) @[Lookup.scala 31:38]
    node _T_16 = and(io.in.instr, UInt<32>("h0fc00707f")) @[Lookup.scala 31:38]
    node _T_17 = eq(UInt<31>("h040005013"), _T_16) @[Lookup.scala 31:38]
    node _T_18 = and(io.in.instr, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_19 = eq(UInt<6>("h033"), _T_18) @[Lookup.scala 31:38]
    node _T_20 = and(io.in.instr, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_21 = eq(UInt<13>("h01033"), _T_20) @[Lookup.scala 31:38]
    node _T_22 = and(io.in.instr, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_23 = eq(UInt<14>("h02033"), _T_22) @[Lookup.scala 31:38]
    node _T_24 = and(io.in.instr, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_25 = eq(UInt<14>("h03033"), _T_24) @[Lookup.scala 31:38]
    node _T_26 = and(io.in.instr, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_27 = eq(UInt<15>("h04033"), _T_26) @[Lookup.scala 31:38]
    node _T_28 = and(io.in.instr, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_29 = eq(UInt<15>("h05033"), _T_28) @[Lookup.scala 31:38]
    node _T_30 = and(io.in.instr, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_31 = eq(UInt<15>("h06033"), _T_30) @[Lookup.scala 31:38]
    node _T_32 = and(io.in.instr, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_33 = eq(UInt<15>("h07033"), _T_32) @[Lookup.scala 31:38]
    node _T_34 = and(io.in.instr, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_35 = eq(UInt<31>("h040000033"), _T_34) @[Lookup.scala 31:38]
    node _T_36 = and(io.in.instr, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_37 = eq(UInt<31>("h040005033"), _T_36) @[Lookup.scala 31:38]
    node _T_38 = and(io.in.instr, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_39 = eq(UInt<5>("h017"), _T_38) @[Lookup.scala 31:38]
    node _T_40 = and(io.in.instr, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_41 = eq(UInt<6>("h037"), _T_40) @[Lookup.scala 31:38]
    node _T_42 = and(io.in.instr, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_43 = eq(UInt<7>("h06f"), _T_42) @[Lookup.scala 31:38]
    node _T_44 = and(io.in.instr, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_45 = eq(UInt<7>("h067"), _T_44) @[Lookup.scala 31:38]
    node _T_46 = and(io.in.instr, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_47 = eq(UInt<7>("h063"), _T_46) @[Lookup.scala 31:38]
    node _T_48 = and(io.in.instr, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_49 = eq(UInt<13>("h01063"), _T_48) @[Lookup.scala 31:38]
    node _T_50 = and(io.in.instr, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_51 = eq(UInt<15>("h04063"), _T_50) @[Lookup.scala 31:38]
    node _T_52 = and(io.in.instr, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_53 = eq(UInt<15>("h05063"), _T_52) @[Lookup.scala 31:38]
    node _T_54 = and(io.in.instr, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_55 = eq(UInt<15>("h06063"), _T_54) @[Lookup.scala 31:38]
    node _T_56 = and(io.in.instr, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_57 = eq(UInt<15>("h07063"), _T_56) @[Lookup.scala 31:38]
    node _T_58 = and(io.in.instr, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_59 = eq(UInt<2>("h03"), _T_58) @[Lookup.scala 31:38]
    node _T_60 = and(io.in.instr, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_61 = eq(UInt<13>("h01003"), _T_60) @[Lookup.scala 31:38]
    node _T_62 = and(io.in.instr, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_63 = eq(UInt<14>("h02003"), _T_62) @[Lookup.scala 31:38]
    node _T_64 = and(io.in.instr, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_65 = eq(UInt<15>("h04003"), _T_64) @[Lookup.scala 31:38]
    node _T_66 = and(io.in.instr, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_67 = eq(UInt<15>("h05003"), _T_66) @[Lookup.scala 31:38]
    node _T_68 = and(io.in.instr, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_69 = eq(UInt<6>("h023"), _T_68) @[Lookup.scala 31:38]
    node _T_70 = and(io.in.instr, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_71 = eq(UInt<13>("h01023"), _T_70) @[Lookup.scala 31:38]
    node _T_72 = and(io.in.instr, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_73 = eq(UInt<14>("h02023"), _T_72) @[Lookup.scala 31:38]
    node _T_74 = and(io.in.instr, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_75 = eq(UInt<5>("h01b"), _T_74) @[Lookup.scala 31:38]
    node _T_76 = and(io.in.instr, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_77 = eq(UInt<13>("h0101b"), _T_76) @[Lookup.scala 31:38]
    node _T_78 = and(io.in.instr, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_79 = eq(UInt<15>("h0501b"), _T_78) @[Lookup.scala 31:38]
    node _T_80 = and(io.in.instr, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_81 = eq(UInt<31>("h04000501b"), _T_80) @[Lookup.scala 31:38]
    node _T_82 = and(io.in.instr, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_83 = eq(UInt<13>("h0103b"), _T_82) @[Lookup.scala 31:38]
    node _T_84 = and(io.in.instr, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_85 = eq(UInt<15>("h0503b"), _T_84) @[Lookup.scala 31:38]
    node _T_86 = and(io.in.instr, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_87 = eq(UInt<31>("h04000503b"), _T_86) @[Lookup.scala 31:38]
    node _T_88 = and(io.in.instr, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_89 = eq(UInt<6>("h03b"), _T_88) @[Lookup.scala 31:38]
    node _T_90 = and(io.in.instr, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_91 = eq(UInt<31>("h04000003b"), _T_90) @[Lookup.scala 31:38]
    node _T_92 = and(io.in.instr, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_93 = eq(UInt<15>("h06003"), _T_92) @[Lookup.scala 31:38]
    node _T_94 = and(io.in.instr, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_95 = eq(UInt<14>("h03003"), _T_94) @[Lookup.scala 31:38]
    node _T_96 = and(io.in.instr, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_97 = eq(UInt<14>("h03023"), _T_96) @[Lookup.scala 31:38]
    node _T_98 = mux(_T_97, UInt<2>("h02"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_99 = mux(_T_95, UInt<3>("h04"), _T_98) @[Lookup.scala 33:37]
    node _T_100 = mux(_T_93, UInt<3>("h04"), _T_99) @[Lookup.scala 33:37]
    node _T_101 = mux(_T_91, UInt<3>("h05"), _T_100) @[Lookup.scala 33:37]
    node _T_102 = mux(_T_89, UInt<3>("h05"), _T_101) @[Lookup.scala 33:37]
    node _T_103 = mux(_T_87, UInt<3>("h05"), _T_102) @[Lookup.scala 33:37]
    node _T_104 = mux(_T_85, UInt<3>("h05"), _T_103) @[Lookup.scala 33:37]
    node _T_105 = mux(_T_83, UInt<3>("h05"), _T_104) @[Lookup.scala 33:37]
    node _T_106 = mux(_T_81, UInt<3>("h04"), _T_105) @[Lookup.scala 33:37]
    node _T_107 = mux(_T_79, UInt<3>("h04"), _T_106) @[Lookup.scala 33:37]
    node _T_108 = mux(_T_77, UInt<3>("h04"), _T_107) @[Lookup.scala 33:37]
    node _T_109 = mux(_T_75, UInt<3>("h04"), _T_108) @[Lookup.scala 33:37]
    node _T_110 = mux(_T_73, UInt<2>("h02"), _T_109) @[Lookup.scala 33:37]
    node _T_111 = mux(_T_71, UInt<2>("h02"), _T_110) @[Lookup.scala 33:37]
    node _T_112 = mux(_T_69, UInt<2>("h02"), _T_111) @[Lookup.scala 33:37]
    node _T_113 = mux(_T_67, UInt<3>("h04"), _T_112) @[Lookup.scala 33:37]
    node _T_114 = mux(_T_65, UInt<3>("h04"), _T_113) @[Lookup.scala 33:37]
    node _T_115 = mux(_T_63, UInt<3>("h04"), _T_114) @[Lookup.scala 33:37]
    node _T_116 = mux(_T_61, UInt<3>("h04"), _T_115) @[Lookup.scala 33:37]
    node _T_117 = mux(_T_59, UInt<3>("h04"), _T_116) @[Lookup.scala 33:37]
    node _T_118 = mux(_T_57, UInt<1>("h01"), _T_117) @[Lookup.scala 33:37]
    node _T_119 = mux(_T_55, UInt<1>("h01"), _T_118) @[Lookup.scala 33:37]
    node _T_120 = mux(_T_53, UInt<1>("h01"), _T_119) @[Lookup.scala 33:37]
    node _T_121 = mux(_T_51, UInt<1>("h01"), _T_120) @[Lookup.scala 33:37]
    node _T_122 = mux(_T_49, UInt<1>("h01"), _T_121) @[Lookup.scala 33:37]
    node _T_123 = mux(_T_47, UInt<1>("h01"), _T_122) @[Lookup.scala 33:37]
    node _T_124 = mux(_T_45, UInt<3>("h04"), _T_123) @[Lookup.scala 33:37]
    node _T_125 = mux(_T_43, UInt<3>("h07"), _T_124) @[Lookup.scala 33:37]
    node _T_126 = mux(_T_41, UInt<3>("h06"), _T_125) @[Lookup.scala 33:37]
    node _T_127 = mux(_T_39, UInt<3>("h06"), _T_126) @[Lookup.scala 33:37]
    node _T_128 = mux(_T_37, UInt<3>("h05"), _T_127) @[Lookup.scala 33:37]
    node _T_129 = mux(_T_35, UInt<3>("h05"), _T_128) @[Lookup.scala 33:37]
    node _T_130 = mux(_T_33, UInt<3>("h05"), _T_129) @[Lookup.scala 33:37]
    node _T_131 = mux(_T_31, UInt<3>("h05"), _T_130) @[Lookup.scala 33:37]
    node _T_132 = mux(_T_29, UInt<3>("h05"), _T_131) @[Lookup.scala 33:37]
    node _T_133 = mux(_T_27, UInt<3>("h05"), _T_132) @[Lookup.scala 33:37]
    node _T_134 = mux(_T_25, UInt<3>("h05"), _T_133) @[Lookup.scala 33:37]
    node _T_135 = mux(_T_23, UInt<3>("h05"), _T_134) @[Lookup.scala 33:37]
    node _T_136 = mux(_T_21, UInt<3>("h05"), _T_135) @[Lookup.scala 33:37]
    node _T_137 = mux(_T_19, UInt<3>("h05"), _T_136) @[Lookup.scala 33:37]
    node _T_138 = mux(_T_17, UInt<3>("h04"), _T_137) @[Lookup.scala 33:37]
    node _T_139 = mux(_T_15, UInt<3>("h04"), _T_138) @[Lookup.scala 33:37]
    node _T_140 = mux(_T_13, UInt<3>("h04"), _T_139) @[Lookup.scala 33:37]
    node _T_141 = mux(_T_11, UInt<3>("h04"), _T_140) @[Lookup.scala 33:37]
    node _T_142 = mux(_T_9, UInt<3>("h04"), _T_141) @[Lookup.scala 33:37]
    node _T_143 = mux(_T_7, UInt<3>("h04"), _T_142) @[Lookup.scala 33:37]
    node _T_144 = mux(_T_5, UInt<3>("h04"), _T_143) @[Lookup.scala 33:37]
    node _T_145 = mux(_T_3, UInt<3>("h04"), _T_144) @[Lookup.scala 33:37]
    node instrType = mux(_T_1, UInt<3>("h04"), _T_145) @[Lookup.scala 33:37]
    node _T_146 = mux(_T_97, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_147 = mux(_T_95, UInt<1>("h01"), _T_146) @[Lookup.scala 33:37]
    node _T_148 = mux(_T_93, UInt<1>("h01"), _T_147) @[Lookup.scala 33:37]
    node _T_149 = mux(_T_91, UInt<1>("h00"), _T_148) @[Lookup.scala 33:37]
    node _T_150 = mux(_T_89, UInt<1>("h00"), _T_149) @[Lookup.scala 33:37]
    node _T_151 = mux(_T_87, UInt<1>("h00"), _T_150) @[Lookup.scala 33:37]
    node _T_152 = mux(_T_85, UInt<1>("h00"), _T_151) @[Lookup.scala 33:37]
    node _T_153 = mux(_T_83, UInt<1>("h00"), _T_152) @[Lookup.scala 33:37]
    node _T_154 = mux(_T_81, UInt<1>("h00"), _T_153) @[Lookup.scala 33:37]
    node _T_155 = mux(_T_79, UInt<1>("h00"), _T_154) @[Lookup.scala 33:37]
    node _T_156 = mux(_T_77, UInt<1>("h00"), _T_155) @[Lookup.scala 33:37]
    node _T_157 = mux(_T_75, UInt<1>("h00"), _T_156) @[Lookup.scala 33:37]
    node _T_158 = mux(_T_73, UInt<1>("h01"), _T_157) @[Lookup.scala 33:37]
    node _T_159 = mux(_T_71, UInt<1>("h01"), _T_158) @[Lookup.scala 33:37]
    node _T_160 = mux(_T_69, UInt<1>("h01"), _T_159) @[Lookup.scala 33:37]
    node _T_161 = mux(_T_67, UInt<1>("h01"), _T_160) @[Lookup.scala 33:37]
    node _T_162 = mux(_T_65, UInt<1>("h01"), _T_161) @[Lookup.scala 33:37]
    node _T_163 = mux(_T_63, UInt<1>("h01"), _T_162) @[Lookup.scala 33:37]
    node _T_164 = mux(_T_61, UInt<1>("h01"), _T_163) @[Lookup.scala 33:37]
    node _T_165 = mux(_T_59, UInt<1>("h01"), _T_164) @[Lookup.scala 33:37]
    node _T_166 = mux(_T_57, UInt<3>("h05"), _T_165) @[Lookup.scala 33:37]
    node _T_167 = mux(_T_55, UInt<3>("h05"), _T_166) @[Lookup.scala 33:37]
    node _T_168 = mux(_T_53, UInt<3>("h05"), _T_167) @[Lookup.scala 33:37]
    node _T_169 = mux(_T_51, UInt<3>("h05"), _T_168) @[Lookup.scala 33:37]
    node _T_170 = mux(_T_49, UInt<3>("h05"), _T_169) @[Lookup.scala 33:37]
    node _T_171 = mux(_T_47, UInt<3>("h05"), _T_170) @[Lookup.scala 33:37]
    node _T_172 = mux(_T_45, UInt<3>("h05"), _T_171) @[Lookup.scala 33:37]
    node _T_173 = mux(_T_43, UInt<3>("h05"), _T_172) @[Lookup.scala 33:37]
    node _T_174 = mux(_T_41, UInt<1>("h00"), _T_173) @[Lookup.scala 33:37]
    node _T_175 = mux(_T_39, UInt<1>("h00"), _T_174) @[Lookup.scala 33:37]
    node _T_176 = mux(_T_37, UInt<1>("h00"), _T_175) @[Lookup.scala 33:37]
    node _T_177 = mux(_T_35, UInt<1>("h00"), _T_176) @[Lookup.scala 33:37]
    node _T_178 = mux(_T_33, UInt<1>("h00"), _T_177) @[Lookup.scala 33:37]
    node _T_179 = mux(_T_31, UInt<1>("h00"), _T_178) @[Lookup.scala 33:37]
    node _T_180 = mux(_T_29, UInt<1>("h00"), _T_179) @[Lookup.scala 33:37]
    node _T_181 = mux(_T_27, UInt<1>("h00"), _T_180) @[Lookup.scala 33:37]
    node _T_182 = mux(_T_25, UInt<1>("h00"), _T_181) @[Lookup.scala 33:37]
    node _T_183 = mux(_T_23, UInt<1>("h00"), _T_182) @[Lookup.scala 33:37]
    node _T_184 = mux(_T_21, UInt<1>("h00"), _T_183) @[Lookup.scala 33:37]
    node _T_185 = mux(_T_19, UInt<1>("h00"), _T_184) @[Lookup.scala 33:37]
    node _T_186 = mux(_T_17, UInt<1>("h00"), _T_185) @[Lookup.scala 33:37]
    node _T_187 = mux(_T_15, UInt<1>("h00"), _T_186) @[Lookup.scala 33:37]
    node _T_188 = mux(_T_13, UInt<1>("h00"), _T_187) @[Lookup.scala 33:37]
    node _T_189 = mux(_T_11, UInt<1>("h00"), _T_188) @[Lookup.scala 33:37]
    node _T_190 = mux(_T_9, UInt<1>("h00"), _T_189) @[Lookup.scala 33:37]
    node _T_191 = mux(_T_7, UInt<1>("h00"), _T_190) @[Lookup.scala 33:37]
    node _T_192 = mux(_T_5, UInt<1>("h00"), _T_191) @[Lookup.scala 33:37]
    node _T_193 = mux(_T_3, UInt<1>("h00"), _T_192) @[Lookup.scala 33:37]
    node funcType = mux(_T_1, UInt<1>("h00"), _T_193) @[Lookup.scala 33:37]
    node _T_194 = mux(_T_97, UInt<4>("h0b"), UInt<7>("h040")) @[Lookup.scala 33:37]
    node _T_195 = mux(_T_95, UInt<2>("h03"), _T_194) @[Lookup.scala 33:37]
    node _T_196 = mux(_T_93, UInt<3>("h06"), _T_195) @[Lookup.scala 33:37]
    node _T_197 = mux(_T_91, UInt<6>("h028"), _T_196) @[Lookup.scala 33:37]
    node _T_198 = mux(_T_89, UInt<7>("h060"), _T_197) @[Lookup.scala 33:37]
    node _T_199 = mux(_T_87, UInt<6>("h02d"), _T_198) @[Lookup.scala 33:37]
    node _T_200 = mux(_T_85, UInt<6>("h025"), _T_199) @[Lookup.scala 33:37]
    node _T_201 = mux(_T_83, UInt<6>("h021"), _T_200) @[Lookup.scala 33:37]
    node _T_202 = mux(_T_81, UInt<6>("h02d"), _T_201) @[Lookup.scala 33:37]
    node _T_203 = mux(_T_79, UInt<6>("h025"), _T_202) @[Lookup.scala 33:37]
    node _T_204 = mux(_T_77, UInt<6>("h021"), _T_203) @[Lookup.scala 33:37]
    node _T_205 = mux(_T_75, UInt<7>("h060"), _T_204) @[Lookup.scala 33:37]
    node _T_206 = mux(_T_73, UInt<4>("h0a"), _T_205) @[Lookup.scala 33:37]
    node _T_207 = mux(_T_71, UInt<4>("h09"), _T_206) @[Lookup.scala 33:37]
    node _T_208 = mux(_T_69, UInt<4>("h08"), _T_207) @[Lookup.scala 33:37]
    node _T_209 = mux(_T_67, UInt<3>("h05"), _T_208) @[Lookup.scala 33:37]
    node _T_210 = mux(_T_65, UInt<3>("h04"), _T_209) @[Lookup.scala 33:37]
    node _T_211 = mux(_T_63, UInt<2>("h02"), _T_210) @[Lookup.scala 33:37]
    node _T_212 = mux(_T_61, UInt<1>("h01"), _T_211) @[Lookup.scala 33:37]
    node _T_213 = mux(_T_59, UInt<1>("h00"), _T_212) @[Lookup.scala 33:37]
    node _T_214 = mux(_T_57, UInt<5>("h017"), _T_213) @[Lookup.scala 33:37]
    node _T_215 = mux(_T_55, UInt<5>("h016"), _T_214) @[Lookup.scala 33:37]
    node _T_216 = mux(_T_53, UInt<5>("h015"), _T_215) @[Lookup.scala 33:37]
    node _T_217 = mux(_T_51, UInt<5>("h014"), _T_216) @[Lookup.scala 33:37]
    node _T_218 = mux(_T_49, UInt<5>("h011"), _T_217) @[Lookup.scala 33:37]
    node _T_219 = mux(_T_47, UInt<5>("h010"), _T_218) @[Lookup.scala 33:37]
    node _T_220 = mux(_T_45, UInt<7>("h05a"), _T_219) @[Lookup.scala 33:37]
    node _T_221 = mux(_T_43, UInt<7>("h058"), _T_220) @[Lookup.scala 33:37]
    node _T_222 = mux(_T_41, UInt<4>("h0f"), _T_221) @[Lookup.scala 33:37]
    node _T_223 = mux(_T_39, UInt<7>("h040"), _T_222) @[Lookup.scala 33:37]
    node _T_224 = mux(_T_37, UInt<4>("h0d"), _T_223) @[Lookup.scala 33:37]
    node _T_225 = mux(_T_35, UInt<4>("h08"), _T_224) @[Lookup.scala 33:37]
    node _T_226 = mux(_T_33, UInt<3>("h07"), _T_225) @[Lookup.scala 33:37]
    node _T_227 = mux(_T_31, UInt<3>("h06"), _T_226) @[Lookup.scala 33:37]
    node _T_228 = mux(_T_29, UInt<3>("h05"), _T_227) @[Lookup.scala 33:37]
    node _T_229 = mux(_T_27, UInt<3>("h04"), _T_228) @[Lookup.scala 33:37]
    node _T_230 = mux(_T_25, UInt<2>("h03"), _T_229) @[Lookup.scala 33:37]
    node _T_231 = mux(_T_23, UInt<2>("h02"), _T_230) @[Lookup.scala 33:37]
    node _T_232 = mux(_T_21, UInt<1>("h01"), _T_231) @[Lookup.scala 33:37]
    node _T_233 = mux(_T_19, UInt<7>("h040"), _T_232) @[Lookup.scala 33:37]
    node _T_234 = mux(_T_17, UInt<4>("h0d"), _T_233) @[Lookup.scala 33:37]
    node _T_235 = mux(_T_15, UInt<3>("h07"), _T_234) @[Lookup.scala 33:37]
    node _T_236 = mux(_T_13, UInt<3>("h06"), _T_235) @[Lookup.scala 33:37]
    node _T_237 = mux(_T_11, UInt<3>("h05"), _T_236) @[Lookup.scala 33:37]
    node _T_238 = mux(_T_9, UInt<3>("h04"), _T_237) @[Lookup.scala 33:37]
    node _T_239 = mux(_T_7, UInt<2>("h03"), _T_238) @[Lookup.scala 33:37]
    node _T_240 = mux(_T_5, UInt<2>("h02"), _T_239) @[Lookup.scala 33:37]
    node _T_241 = mux(_T_3, UInt<1>("h01"), _T_240) @[Lookup.scala 33:37]
    node funcOpType = mux(_T_1, UInt<7>("h040"), _T_241) @[Lookup.scala 33:37]
    io.out.cf.pc <= io.in.pc @[IDU.scala 19:24]
    io.out.cf.instr <= io.in.instr @[IDU.scala 20:24]
    node _io_out_ctrl_rfSrc1_T = eq(io.out.ctrl.src1Type, UInt<1>("h01")) @[IDU.scala 21:54]
    node _io_out_ctrl_rfSrc1_T_1 = mux(_io_out_ctrl_rfSrc1_T, UInt<1>("h00"), src1Addr) @[IDU.scala 21:32]
    io.out.ctrl.rfSrc1 <= _io_out_ctrl_rfSrc1_T_1 @[IDU.scala 21:26]
    node _io_out_ctrl_rfSrc2_T = eq(io.out.ctrl.src2Type, UInt<1>("h00")) @[IDU.scala 22:54]
    node _io_out_ctrl_rfSrc2_T_1 = mux(_io_out_ctrl_rfSrc2_T, src2Addr, UInt<1>("h00")) @[IDU.scala 22:32]
    io.out.ctrl.rfSrc2 <= _io_out_ctrl_rfSrc2_T_1 @[IDU.scala 22:26]
    node _io_out_ctrl_rfrd_T = bits(instrType, 2, 2) @[Decode.scala 16:50]
    node _io_out_ctrl_rfrd_T_1 = mux(_io_out_ctrl_rfrd_T, rdAddr, UInt<1>("h00")) @[IDU.scala 23:32]
    io.out.ctrl.rfrd <= _io_out_ctrl_rfrd_T_1 @[IDU.scala 23:26]
    io.out.ctrl.funcType <= funcType @[IDU.scala 24:26]
    io.out.ctrl.funcOpType <= funcOpType @[IDU.scala 25:26]
    node _io_out_ctrl_rfWen_T = bits(instrType, 2, 2) @[Decode.scala 16:50]
    io.out.ctrl.rfWen <= _io_out_ctrl_rfWen_T @[IDU.scala 26:26]
    node _io_out_ctrl_src1Type_T = eq(UInt<3>("h04"), instrType) @[utils.scala 8:34]
    node _io_out_ctrl_src1Type_T_1 = eq(UInt<3>("h05"), instrType) @[utils.scala 8:34]
    node _io_out_ctrl_src1Type_T_2 = eq(UInt<2>("h02"), instrType) @[utils.scala 8:34]
    node _io_out_ctrl_src1Type_T_3 = eq(UInt<1>("h01"), instrType) @[utils.scala 8:34]
    node _io_out_ctrl_src1Type_T_4 = eq(UInt<3>("h06"), instrType) @[utils.scala 8:34]
    node _io_out_ctrl_src1Type_T_5 = eq(UInt<3>("h07"), instrType) @[utils.scala 8:34]
    node _io_out_ctrl_src1Type_T_6 = eq(UInt<1>("h00"), instrType) @[utils.scala 8:34]
    node _io_out_ctrl_src1Type_T_7 = mux(_io_out_ctrl_src1Type_T, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_ctrl_src1Type_T_8 = mux(_io_out_ctrl_src1Type_T_1, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_ctrl_src1Type_T_9 = mux(_io_out_ctrl_src1Type_T_2, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_ctrl_src1Type_T_10 = mux(_io_out_ctrl_src1Type_T_3, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_ctrl_src1Type_T_11 = mux(_io_out_ctrl_src1Type_T_4, UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_ctrl_src1Type_T_12 = mux(_io_out_ctrl_src1Type_T_5, UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_ctrl_src1Type_T_13 = mux(_io_out_ctrl_src1Type_T_6, UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_ctrl_src1Type_T_14 = or(_io_out_ctrl_src1Type_T_7, _io_out_ctrl_src1Type_T_8) @[Mux.scala 27:72]
    node _io_out_ctrl_src1Type_T_15 = or(_io_out_ctrl_src1Type_T_14, _io_out_ctrl_src1Type_T_9) @[Mux.scala 27:72]
    node _io_out_ctrl_src1Type_T_16 = or(_io_out_ctrl_src1Type_T_15, _io_out_ctrl_src1Type_T_10) @[Mux.scala 27:72]
    node _io_out_ctrl_src1Type_T_17 = or(_io_out_ctrl_src1Type_T_16, _io_out_ctrl_src1Type_T_11) @[Mux.scala 27:72]
    node _io_out_ctrl_src1Type_T_18 = or(_io_out_ctrl_src1Type_T_17, _io_out_ctrl_src1Type_T_12) @[Mux.scala 27:72]
    node _io_out_ctrl_src1Type_T_19 = or(_io_out_ctrl_src1Type_T_18, _io_out_ctrl_src1Type_T_13) @[Mux.scala 27:72]
    wire _io_out_ctrl_src1Type_WIRE : UInt<1> @[Mux.scala 27:72]
    _io_out_ctrl_src1Type_WIRE <= _io_out_ctrl_src1Type_T_19 @[Mux.scala 27:72]
    io.out.ctrl.src1Type <= _io_out_ctrl_src1Type_WIRE @[IDU.scala 37:24]
    node _io_out_ctrl_src2Type_T = eq(UInt<3>("h04"), instrType) @[utils.scala 8:34]
    node _io_out_ctrl_src2Type_T_1 = eq(UInt<3>("h05"), instrType) @[utils.scala 8:34]
    node _io_out_ctrl_src2Type_T_2 = eq(UInt<2>("h02"), instrType) @[utils.scala 8:34]
    node _io_out_ctrl_src2Type_T_3 = eq(UInt<1>("h01"), instrType) @[utils.scala 8:34]
    node _io_out_ctrl_src2Type_T_4 = eq(UInt<3>("h06"), instrType) @[utils.scala 8:34]
    node _io_out_ctrl_src2Type_T_5 = eq(UInt<3>("h07"), instrType) @[utils.scala 8:34]
    node _io_out_ctrl_src2Type_T_6 = eq(UInt<1>("h00"), instrType) @[utils.scala 8:34]
    node _io_out_ctrl_src2Type_T_7 = mux(_io_out_ctrl_src2Type_T, UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_ctrl_src2Type_T_8 = mux(_io_out_ctrl_src2Type_T_1, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_ctrl_src2Type_T_9 = mux(_io_out_ctrl_src2Type_T_2, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_ctrl_src2Type_T_10 = mux(_io_out_ctrl_src2Type_T_3, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_ctrl_src2Type_T_11 = mux(_io_out_ctrl_src2Type_T_4, UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_ctrl_src2Type_T_12 = mux(_io_out_ctrl_src2Type_T_5, UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_ctrl_src2Type_T_13 = mux(_io_out_ctrl_src2Type_T_6, UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_ctrl_src2Type_T_14 = or(_io_out_ctrl_src2Type_T_7, _io_out_ctrl_src2Type_T_8) @[Mux.scala 27:72]
    node _io_out_ctrl_src2Type_T_15 = or(_io_out_ctrl_src2Type_T_14, _io_out_ctrl_src2Type_T_9) @[Mux.scala 27:72]
    node _io_out_ctrl_src2Type_T_16 = or(_io_out_ctrl_src2Type_T_15, _io_out_ctrl_src2Type_T_10) @[Mux.scala 27:72]
    node _io_out_ctrl_src2Type_T_17 = or(_io_out_ctrl_src2Type_T_16, _io_out_ctrl_src2Type_T_11) @[Mux.scala 27:72]
    node _io_out_ctrl_src2Type_T_18 = or(_io_out_ctrl_src2Type_T_17, _io_out_ctrl_src2Type_T_12) @[Mux.scala 27:72]
    node _io_out_ctrl_src2Type_T_19 = or(_io_out_ctrl_src2Type_T_18, _io_out_ctrl_src2Type_T_13) @[Mux.scala 27:72]
    wire _io_out_ctrl_src2Type_WIRE : UInt<1> @[Mux.scala 27:72]
    _io_out_ctrl_src2Type_WIRE <= _io_out_ctrl_src2Type_T_19 @[Mux.scala 27:72]
    io.out.ctrl.src2Type <= _io_out_ctrl_src2Type_WIRE @[IDU.scala 38:24]
    node imm_lo = bits(io.in.instr, 31, 20) @[IDU.scala 41:29]
    node imm_signBit = bits(imm_lo, 11, 11) @[utils.scala 14:20]
    node _imm_T = bits(imm_signBit, 0, 0) @[Bitwise.scala 72:15]
    node imm_hi = mux(_imm_T, UInt<52>("h0fffffffffffff"), UInt<52>("h00")) @[Bitwise.scala 72:12]
    node _imm_T_1 = cat(imm_hi, imm_lo) @[Cat.scala 30:58]
    node imm_hi_1 = bits(io.in.instr, 31, 25) @[IDU.scala 42:33]
    node imm_lo_1 = bits(io.in.instr, 11, 7) @[IDU.scala 42:48]
    node imm_lo_2 = cat(imm_hi_1, imm_lo_1) @[Cat.scala 30:58]
    node imm_signBit_1 = bits(imm_lo_2, 11, 11) @[utils.scala 14:20]
    node _imm_T_2 = bits(imm_signBit_1, 0, 0) @[Bitwise.scala 72:15]
    node imm_hi_2 = mux(_imm_T_2, UInt<52>("h0fffffffffffff"), UInt<52>("h00")) @[Bitwise.scala 72:12]
    node _imm_T_3 = cat(imm_hi_2, imm_lo_2) @[Cat.scala 30:58]
    node imm_hi_hi_hi = bits(io.in.instr, 31, 31) @[IDU.scala 43:33]
    node imm_hi_hi_lo = bits(io.in.instr, 7, 7) @[IDU.scala 43:44]
    node imm_hi_lo = bits(io.in.instr, 30, 25) @[IDU.scala 43:54]
    node imm_lo_hi = bits(io.in.instr, 11, 8) @[IDU.scala 43:69]
    node imm_lo_3 = cat(imm_lo_hi, UInt<1>("h00")) @[Cat.scala 30:58]
    node imm_hi_hi = cat(imm_hi_hi_hi, imm_hi_hi_lo) @[Cat.scala 30:58]
    node imm_hi_3 = cat(imm_hi_hi, imm_hi_lo) @[Cat.scala 30:58]
    node imm_lo_4 = cat(imm_hi_3, imm_lo_3) @[Cat.scala 30:58]
    node imm_signBit_2 = bits(imm_lo_4, 12, 12) @[utils.scala 14:20]
    node _imm_T_4 = bits(imm_signBit_2, 0, 0) @[Bitwise.scala 72:15]
    node imm_hi_4 = mux(_imm_T_4, UInt<51>("h07ffffffffffff"), UInt<51>("h00")) @[Bitwise.scala 72:12]
    node _imm_T_5 = cat(imm_hi_4, imm_lo_4) @[Cat.scala 30:58]
    node imm_hi_5 = bits(io.in.instr, 31, 12) @[IDU.scala 44:33]
    node imm_lo_5 = cat(imm_hi_5, UInt<12>("h00")) @[Cat.scala 30:58]
    node imm_signBit_3 = bits(imm_lo_5, 31, 31) @[utils.scala 14:20]
    node _imm_T_6 = bits(imm_signBit_3, 0, 0) @[Bitwise.scala 72:15]
    node imm_hi_6 = mux(_imm_T_6, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
    node _imm_T_7 = cat(imm_hi_6, imm_lo_5) @[Cat.scala 30:58]
    node imm_hi_hi_hi_1 = bits(io.in.instr, 31, 31) @[IDU.scala 45:33]
    node imm_hi_hi_lo_1 = bits(io.in.instr, 19, 12) @[IDU.scala 45:44]
    node imm_hi_lo_1 = bits(io.in.instr, 20, 20) @[IDU.scala 45:59]
    node imm_lo_hi_1 = bits(io.in.instr, 30, 21) @[IDU.scala 45:70]
    node imm_lo_6 = cat(imm_lo_hi_1, UInt<1>("h00")) @[Cat.scala 30:58]
    node imm_hi_hi_1 = cat(imm_hi_hi_hi_1, imm_hi_hi_lo_1) @[Cat.scala 30:58]
    node imm_hi_7 = cat(imm_hi_hi_1, imm_hi_lo_1) @[Cat.scala 30:58]
    node imm_lo_7 = cat(imm_hi_7, imm_lo_6) @[Cat.scala 30:58]
    node imm_signBit_4 = bits(imm_lo_7, 20, 20) @[utils.scala 14:20]
    node _imm_T_8 = bits(imm_signBit_4, 0, 0) @[Bitwise.scala 72:15]
    node imm_hi_8 = mux(_imm_T_8, UInt<43>("h07ffffffffff"), UInt<43>("h00")) @[Bitwise.scala 72:12]
    node _imm_T_9 = cat(imm_hi_8, imm_lo_7) @[Cat.scala 30:58]
    node _imm_T_10 = eq(UInt<3>("h04"), instrType) @[utils.scala 8:34]
    node _imm_T_11 = eq(UInt<2>("h02"), instrType) @[utils.scala 8:34]
    node _imm_T_12 = eq(UInt<1>("h01"), instrType) @[utils.scala 8:34]
    node _imm_T_13 = eq(UInt<3>("h06"), instrType) @[utils.scala 8:34]
    node _imm_T_14 = eq(UInt<3>("h07"), instrType) @[utils.scala 8:34]
    node _imm_T_15 = mux(_imm_T_10, _imm_T_1, UInt<1>("h00")) @[Mux.scala 27:72]
    node _imm_T_16 = mux(_imm_T_11, _imm_T_3, UInt<1>("h00")) @[Mux.scala 27:72]
    node _imm_T_17 = mux(_imm_T_12, _imm_T_5, UInt<1>("h00")) @[Mux.scala 27:72]
    node _imm_T_18 = mux(_imm_T_13, _imm_T_7, UInt<1>("h00")) @[Mux.scala 27:72]
    node _imm_T_19 = mux(_imm_T_14, _imm_T_9, UInt<1>("h00")) @[Mux.scala 27:72]
    node _imm_T_20 = or(_imm_T_15, _imm_T_16) @[Mux.scala 27:72]
    node _imm_T_21 = or(_imm_T_20, _imm_T_17) @[Mux.scala 27:72]
    node _imm_T_22 = or(_imm_T_21, _imm_T_18) @[Mux.scala 27:72]
    node _imm_T_23 = or(_imm_T_22, _imm_T_19) @[Mux.scala 27:72]
    wire imm : UInt<64> @[Mux.scala 27:72]
    imm <= _imm_T_23 @[Mux.scala 27:72]
    io.out.data.imm <= imm @[IDU.scala 58:20]
    io.out.data.src1 is invalid @[IDU.scala 59:20]
    io.out.data.src2 is invalid @[IDU.scala 60:20]
    
  module IDUtoEXU : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : {flip cf : {flip pc : UInt<64>, flip instr : UInt<32>}, ctrl : {src1Type : UInt<1>, src2Type : UInt<1>, funcType : UInt<3>, funcOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfrd : UInt<5>, rfWen : UInt<1>}, data : {src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64>}}, flip src1 : UInt<64>, flip src2 : UInt<64>, out : {flip cf : {flip pc : UInt<64>, flip instr : UInt<32>}, ctrl : {src1Type : UInt<1>, src2Type : UInt<1>, funcType : UInt<3>, funcOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfrd : UInt<5>, rfWen : UInt<1>}, data : {src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64>}}}
    
    wire _regs_WIRE : UInt<64>[32] @[regfile.scala 7:29]
    _regs_WIRE[0] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[1] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[2] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[3] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[4] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[5] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[6] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[7] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[8] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[9] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[10] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[11] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[12] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[13] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[14] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[15] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[16] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[17] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[18] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[19] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[20] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[21] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[22] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[23] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[24] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[25] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[26] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[27] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[28] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[29] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[30] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[31] <= UInt<64>("h00") @[regfile.scala 7:29]
    reg regs : UInt<64>[32], clock with : (reset => (reset, _regs_WIRE)) @[regfile.scala 7:21]
    node _io_out_data_src1_T = eq(UInt<1>("h00"), io.in.ctrl.src1Type) @[utils.scala 8:34]
    node _io_out_data_src1_T_1 = eq(UInt<1>("h01"), io.in.ctrl.src1Type) @[utils.scala 8:34]
    node _io_out_data_src1_T_2 = mux(_io_out_data_src1_T, io.src1, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_data_src1_T_3 = mux(_io_out_data_src1_T_1, io.in.cf.pc, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_data_src1_T_4 = or(_io_out_data_src1_T_2, _io_out_data_src1_T_3) @[Mux.scala 27:72]
    wire _io_out_data_src1_WIRE : UInt<64> @[Mux.scala 27:72]
    _io_out_data_src1_WIRE <= _io_out_data_src1_T_4 @[Mux.scala 27:72]
    io.out.data.src1 <= _io_out_data_src1_WIRE @[IDUtoEXU.scala 24:22]
    node _io_out_data_src2_T = eq(UInt<1>("h00"), io.in.ctrl.src2Type) @[utils.scala 8:34]
    node _io_out_data_src2_T_1 = eq(UInt<1>("h01"), io.in.ctrl.src2Type) @[utils.scala 8:34]
    node _io_out_data_src2_T_2 = mux(_io_out_data_src2_T, io.src2, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_data_src2_T_3 = mux(_io_out_data_src2_T_1, io.in.data.imm, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_data_src2_T_4 = or(_io_out_data_src2_T_2, _io_out_data_src2_T_3) @[Mux.scala 27:72]
    wire _io_out_data_src2_WIRE : UInt<64> @[Mux.scala 27:72]
    _io_out_data_src2_WIRE <= _io_out_data_src2_T_4 @[Mux.scala 27:72]
    io.out.data.src2 <= _io_out_data_src2_WIRE @[IDUtoEXU.scala 28:22]
    io.out.data.imm <= io.in.data.imm @[IDUtoEXU.scala 35:21]
    io.out.cf.instr <= io.in.cf.instr @[IDUtoEXU.scala 36:17]
    io.out.cf.pc <= io.in.cf.pc @[IDUtoEXU.scala 36:17]
    io.out.ctrl.rfWen <= io.in.ctrl.rfWen @[IDUtoEXU.scala 37:17]
    io.out.ctrl.rfrd <= io.in.ctrl.rfrd @[IDUtoEXU.scala 37:17]
    io.out.ctrl.rfSrc2 <= io.in.ctrl.rfSrc2 @[IDUtoEXU.scala 37:17]
    io.out.ctrl.rfSrc1 <= io.in.ctrl.rfSrc1 @[IDUtoEXU.scala 37:17]
    io.out.ctrl.funcOpType <= io.in.ctrl.funcOpType @[IDUtoEXU.scala 37:17]
    io.out.ctrl.funcType <= io.in.ctrl.funcType @[IDUtoEXU.scala 37:17]
    io.out.ctrl.src2Type <= io.in.ctrl.src2Type @[IDUtoEXU.scala 37:17]
    io.out.ctrl.src1Type <= io.in.ctrl.src1Type @[IDUtoEXU.scala 37:17]
    
  module ALU : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : {flip cf : {flip pc : UInt<64>, flip instr : UInt<32>}, ctrl : {src1Type : UInt<1>, src2Type : UInt<1>, funcType : UInt<3>, funcOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfrd : UInt<5>, rfWen : UInt<1>}, data : {src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64>}}, out : {aluRes : UInt<64>}}
    
    wire src1 : UInt<64> @[ALU.scala 36:18]
    wire src2 : UInt<64> @[ALU.scala 37:18]
    src1 <= io.in.data.src1 @[ALU.scala 38:8]
    src2 <= io.in.data.src2 @[ALU.scala 39:8]
    node _shamt_T = bits(io.in.ctrl.funcOpType, 5, 5) @[ALU.scala 26:34]
    node _shamt_T_1 = bits(src2, 4, 0) @[ALU.scala 42:66]
    node _shamt_T_2 = bits(src2, 5, 0) @[ALU.scala 42:78]
    node shamt = mux(_shamt_T, _shamt_T_1, _shamt_T_2) @[ALU.scala 42:18]
    node _T = add(src1, src2) @[ALU.scala 44:28]
    node _T_1 = tail(_T, 1) @[ALU.scala 44:28]
    node _T_2 = dshl(src1, shamt) @[ALU.scala 45:28]
    node _T_3 = asSInt(src1) @[ALU.scala 46:57]
    node _T_4 = asSInt(src2) @[ALU.scala 46:73]
    node lo = lt(_T_3, _T_4) @[ALU.scala 46:60]
    node _T_5 = cat(UInt<63>("h00"), lo) @[Cat.scala 30:58]
    node _T_6 = lt(src1, src2) @[ALU.scala 47:28]
    node _T_7 = xor(src1, src2) @[ALU.scala 48:28]
    node _T_8 = dshr(src1, shamt) @[ALU.scala 49:28]
    node _T_9 = or(src1, src2) @[ALU.scala 50:28]
    node _T_10 = and(src1, src2) @[ALU.scala 51:28]
    node _T_11 = sub(src1, src2) @[ALU.scala 52:28]
    node _T_12 = tail(_T_11, 1) @[ALU.scala 52:28]
    node _T_13 = asSInt(src1) @[ALU.scala 53:29]
    node _T_14 = dshr(_T_13, shamt) @[ALU.scala 53:36]
    node _T_15 = asUInt(_T_14) @[ALU.scala 53:46]
    node _T_16 = add(src1, src2) @[ALU.scala 54:28]
    node _T_17 = tail(_T_16, 1) @[ALU.scala 54:28]
    node _T_18 = sub(src1, src2) @[ALU.scala 55:28]
    node _T_19 = tail(_T_18, 1) @[ALU.scala 55:28]
    node _T_20 = dshl(src1, shamt) @[ALU.scala 56:28]
    node _T_21 = bits(src1, 31, 0) @[ALU.scala 57:27]
    node _T_22 = dshr(_T_21, shamt) @[ALU.scala 57:34]
    node _T_23 = bits(src1, 31, 0) @[ALU.scala 58:28]
    node _T_24 = asSInt(_T_23) @[ALU.scala 58:41]
    node _T_25 = dshr(_T_24, shamt) @[ALU.scala 58:44]
    node _T_26 = asUInt(_T_25) @[ALU.scala 58:60]
    wire res : UInt<64> @[ALU.scala 62:24]
    node _res_T = eq(UInt<7>("h040"), io.in.ctrl.funcOpType) @[Mux.scala 80:60]
    node _res_T_1 = mux(_res_T, _T_1, UInt<1>("h00")) @[Mux.scala 80:57]
    node _res_T_2 = eq(UInt<1>("h01"), io.in.ctrl.funcOpType) @[Mux.scala 80:60]
    node _res_T_3 = mux(_res_T_2, _T_2, _res_T_1) @[Mux.scala 80:57]
    node _res_T_4 = eq(UInt<2>("h02"), io.in.ctrl.funcOpType) @[Mux.scala 80:60]
    node _res_T_5 = mux(_res_T_4, _T_5, _res_T_3) @[Mux.scala 80:57]
    node _res_T_6 = eq(UInt<2>("h03"), io.in.ctrl.funcOpType) @[Mux.scala 80:60]
    node _res_T_7 = mux(_res_T_6, _T_6, _res_T_5) @[Mux.scala 80:57]
    node _res_T_8 = eq(UInt<3>("h04"), io.in.ctrl.funcOpType) @[Mux.scala 80:60]
    node _res_T_9 = mux(_res_T_8, _T_7, _res_T_7) @[Mux.scala 80:57]
    node _res_T_10 = eq(UInt<3>("h05"), io.in.ctrl.funcOpType) @[Mux.scala 80:60]
    node _res_T_11 = mux(_res_T_10, _T_8, _res_T_9) @[Mux.scala 80:57]
    node _res_T_12 = eq(UInt<3>("h06"), io.in.ctrl.funcOpType) @[Mux.scala 80:60]
    node _res_T_13 = mux(_res_T_12, _T_9, _res_T_11) @[Mux.scala 80:57]
    node _res_T_14 = eq(UInt<3>("h07"), io.in.ctrl.funcOpType) @[Mux.scala 80:60]
    node _res_T_15 = mux(_res_T_14, _T_10, _res_T_13) @[Mux.scala 80:57]
    node _res_T_16 = eq(UInt<4>("h08"), io.in.ctrl.funcOpType) @[Mux.scala 80:60]
    node _res_T_17 = mux(_res_T_16, _T_12, _res_T_15) @[Mux.scala 80:57]
    node _res_T_18 = eq(UInt<4>("h0d"), io.in.ctrl.funcOpType) @[Mux.scala 80:60]
    node _res_T_19 = mux(_res_T_18, _T_15, _res_T_17) @[Mux.scala 80:57]
    node _res_T_20 = eq(UInt<7>("h060"), io.in.ctrl.funcOpType) @[Mux.scala 80:60]
    node _res_T_21 = mux(_res_T_20, _T_17, _res_T_19) @[Mux.scala 80:57]
    node _res_T_22 = eq(UInt<6>("h028"), io.in.ctrl.funcOpType) @[Mux.scala 80:60]
    node _res_T_23 = mux(_res_T_22, _T_19, _res_T_21) @[Mux.scala 80:57]
    node _res_T_24 = eq(UInt<6>("h021"), io.in.ctrl.funcOpType) @[Mux.scala 80:60]
    node _res_T_25 = mux(_res_T_24, _T_20, _res_T_23) @[Mux.scala 80:57]
    node _res_T_26 = eq(UInt<6>("h025"), io.in.ctrl.funcOpType) @[Mux.scala 80:60]
    node _res_T_27 = mux(_res_T_26, _T_22, _res_T_25) @[Mux.scala 80:57]
    node _res_T_28 = eq(UInt<6>("h02d"), io.in.ctrl.funcOpType) @[Mux.scala 80:60]
    node _res_T_29 = mux(_res_T_28, _T_26, _res_T_27) @[Mux.scala 80:57]
    node _res_T_30 = eq(UInt<4>("h0f"), io.in.ctrl.funcOpType) @[Mux.scala 80:60]
    node _res_T_31 = mux(_res_T_30, src2, _res_T_29) @[Mux.scala 80:57]
    res <= _res_T_31 @[ALU.scala 63:7]
    node _io_out_aluRes_T = bits(io.in.ctrl.funcOpType, 5, 5) @[ALU.scala 26:34]
    node io_out_aluRes_lo = bits(res, 31, 0) @[ALU.scala 86:78]
    node io_out_aluRes_signBit = bits(io_out_aluRes_lo, 31, 31) @[utils.scala 14:20]
    node _io_out_aluRes_T_1 = bits(io_out_aluRes_signBit, 0, 0) @[Bitwise.scala 72:15]
    node io_out_aluRes_hi = mux(_io_out_aluRes_T_1, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
    node _io_out_aluRes_T_2 = cat(io_out_aluRes_hi, io_out_aluRes_lo) @[Cat.scala 30:58]
    node _io_out_aluRes_T_3 = mux(_io_out_aluRes_T, _io_out_aluRes_T_2, res) @[ALU.scala 86:23]
    io.out.aluRes <= _io_out_aluRes_T_3 @[ALU.scala 86:17]
    
  extmodule RAMHelper_1 : 
    input clk : Clock
    input en : UInt<1>
    input rIdx : UInt<64>
    output rdata : UInt<64>
    input wIdx : UInt<64>
    input wdata : UInt<64>
    input wmask : UInt<64>
    input wen : UInt<1>
    
    defname = RAMHelper
    
    
  module LSU : 
    input clock : Clock
    input reset : Reset
    output io : {flip valid : UInt<1>, flip in : {flip cf : {flip pc : UInt<64>, flip instr : UInt<32>}, ctrl : {src1Type : UInt<1>, src2Type : UInt<1>, funcType : UInt<3>, funcOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfrd : UInt<5>, rfWen : UInt<1>}, data : {src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64>}}, out : {rdata : UInt<64>}}
    
    node _addr_T = add(io.in.data.src1, io.in.data.imm) @[LSU.scala 61:30]
    node addr = tail(_addr_T, 1) @[LSU.scala 61:30]
    node isStore = bits(io.in.ctrl.funcOpType, 3, 3) @[LSU.scala 25:39]
    inst ram of RAMHelper_1 @[LSU.scala 65:19]
    ram.wen is invalid
    ram.wmask is invalid
    ram.wdata is invalid
    ram.wIdx is invalid
    ram.rdata is invalid
    ram.rIdx is invalid
    ram.en is invalid
    ram.clk is invalid
    ram.clk <= clock @[LSU.scala 66:14]
    ram.en <= io.valid @[LSU.scala 67:13]
    node _idx_T = sub(addr, UInt<32>("h080000000")) @[LSU.scala 70:19]
    node _idx_T_1 = tail(_idx_T, 1) @[LSU.scala 70:19]
    node idx = shr(_idx_T_1, 3) @[LSU.scala 70:33]
    ram.rIdx <= idx @[LSU.scala 71:15]
    node _rdataSel_T = bits(addr, 2, 0) @[LSU.scala 74:33]
    node _rdataSel_T_1 = bits(ram.rdata, 63, 0) @[LSU.scala 75:22]
    node _rdataSel_T_2 = bits(ram.rdata, 63, 8) @[LSU.scala 76:22]
    node _rdataSel_T_3 = bits(ram.rdata, 63, 16) @[LSU.scala 77:22]
    node _rdataSel_T_4 = bits(ram.rdata, 63, 24) @[LSU.scala 78:22]
    node _rdataSel_T_5 = bits(ram.rdata, 63, 32) @[LSU.scala 79:22]
    node _rdataSel_T_6 = bits(ram.rdata, 63, 40) @[LSU.scala 80:22]
    node _rdataSel_T_7 = bits(ram.rdata, 63, 48) @[LSU.scala 81:22]
    node _rdataSel_T_8 = bits(ram.rdata, 63, 56) @[LSU.scala 82:22]
    node _rdataSel_T_9 = eq(UInt<1>("h00"), _rdataSel_T) @[utils.scala 8:34]
    node _rdataSel_T_10 = eq(UInt<1>("h01"), _rdataSel_T) @[utils.scala 8:34]
    node _rdataSel_T_11 = eq(UInt<2>("h02"), _rdataSel_T) @[utils.scala 8:34]
    node _rdataSel_T_12 = eq(UInt<2>("h03"), _rdataSel_T) @[utils.scala 8:34]
    node _rdataSel_T_13 = eq(UInt<3>("h04"), _rdataSel_T) @[utils.scala 8:34]
    node _rdataSel_T_14 = eq(UInt<3>("h05"), _rdataSel_T) @[utils.scala 8:34]
    node _rdataSel_T_15 = eq(UInt<3>("h06"), _rdataSel_T) @[utils.scala 8:34]
    node _rdataSel_T_16 = eq(UInt<3>("h07"), _rdataSel_T) @[utils.scala 8:34]
    node _rdataSel_T_17 = mux(_rdataSel_T_9, _rdataSel_T_1, UInt<1>("h00")) @[Mux.scala 27:72]
    node _rdataSel_T_18 = mux(_rdataSel_T_10, _rdataSel_T_2, UInt<1>("h00")) @[Mux.scala 27:72]
    node _rdataSel_T_19 = mux(_rdataSel_T_11, _rdataSel_T_3, UInt<1>("h00")) @[Mux.scala 27:72]
    node _rdataSel_T_20 = mux(_rdataSel_T_12, _rdataSel_T_4, UInt<1>("h00")) @[Mux.scala 27:72]
    node _rdataSel_T_21 = mux(_rdataSel_T_13, _rdataSel_T_5, UInt<1>("h00")) @[Mux.scala 27:72]
    node _rdataSel_T_22 = mux(_rdataSel_T_14, _rdataSel_T_6, UInt<1>("h00")) @[Mux.scala 27:72]
    node _rdataSel_T_23 = mux(_rdataSel_T_15, _rdataSel_T_7, UInt<1>("h00")) @[Mux.scala 27:72]
    node _rdataSel_T_24 = mux(_rdataSel_T_16, _rdataSel_T_8, UInt<1>("h00")) @[Mux.scala 27:72]
    node _rdataSel_T_25 = or(_rdataSel_T_17, _rdataSel_T_18) @[Mux.scala 27:72]
    node _rdataSel_T_26 = or(_rdataSel_T_25, _rdataSel_T_19) @[Mux.scala 27:72]
    node _rdataSel_T_27 = or(_rdataSel_T_26, _rdataSel_T_20) @[Mux.scala 27:72]
    node _rdataSel_T_28 = or(_rdataSel_T_27, _rdataSel_T_21) @[Mux.scala 27:72]
    node _rdataSel_T_29 = or(_rdataSel_T_28, _rdataSel_T_22) @[Mux.scala 27:72]
    node _rdataSel_T_30 = or(_rdataSel_T_29, _rdataSel_T_23) @[Mux.scala 27:72]
    node _rdataSel_T_31 = or(_rdataSel_T_30, _rdataSel_T_24) @[Mux.scala 27:72]
    wire rdataSel : UInt<64> @[Mux.scala 27:72]
    rdataSel <= _rdataSel_T_31 @[Mux.scala 27:72]
    node io_out_rdata_lo = bits(rdataSel, 7, 0) @[LSU.scala 86:39]
    node io_out_rdata_signBit = bits(io_out_rdata_lo, 7, 7) @[utils.scala 14:20]
    node _io_out_rdata_T = bits(io_out_rdata_signBit, 0, 0) @[Bitwise.scala 72:15]
    node io_out_rdata_hi = mux(_io_out_rdata_T, UInt<56>("h0ffffffffffffff"), UInt<56>("h00")) @[Bitwise.scala 72:12]
    node _io_out_rdata_T_1 = cat(io_out_rdata_hi, io_out_rdata_lo) @[Cat.scala 30:58]
    node io_out_rdata_lo_1 = bits(rdataSel, 15, 0) @[LSU.scala 87:39]
    node io_out_rdata_signBit_1 = bits(io_out_rdata_lo_1, 15, 15) @[utils.scala 14:20]
    node _io_out_rdata_T_2 = bits(io_out_rdata_signBit_1, 0, 0) @[Bitwise.scala 72:15]
    node io_out_rdata_hi_1 = mux(_io_out_rdata_T_2, UInt<48>("h0ffffffffffff"), UInt<48>("h00")) @[Bitwise.scala 72:12]
    node _io_out_rdata_T_3 = cat(io_out_rdata_hi_1, io_out_rdata_lo_1) @[Cat.scala 30:58]
    node io_out_rdata_lo_2 = bits(rdataSel, 31, 0) @[LSU.scala 88:39]
    node io_out_rdata_signBit_2 = bits(io_out_rdata_lo_2, 31, 31) @[utils.scala 14:20]
    node _io_out_rdata_T_4 = bits(io_out_rdata_signBit_2, 0, 0) @[Bitwise.scala 72:15]
    node io_out_rdata_hi_2 = mux(_io_out_rdata_T_4, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
    node _io_out_rdata_T_5 = cat(io_out_rdata_hi_2, io_out_rdata_lo_2) @[Cat.scala 30:58]
    node _io_out_rdata_T_6 = bits(rdataSel, 63, 0) @[LSU.scala 89:39]
    node io_out_rdata_signBit_3 = bits(_io_out_rdata_T_6, 63, 63) @[utils.scala 14:20]
    node _io_out_rdata_T_7 = bits(_io_out_rdata_T_6, 63, 0) @[utils.scala 15:23]
    node io_out_rdata_lo_3 = bits(rdataSel, 7, 0) @[LSU.scala 90:36]
    node io_out_rdata_hi_3 = mux(UInt<1>("h00"), UInt<56>("h0ffffffffffffff"), UInt<56>("h00")) @[Bitwise.scala 72:12]
    node _io_out_rdata_T_8 = cat(io_out_rdata_hi_3, io_out_rdata_lo_3) @[Cat.scala 30:58]
    node io_out_rdata_lo_4 = bits(rdataSel, 15, 0) @[LSU.scala 91:36]
    node io_out_rdata_hi_4 = mux(UInt<1>("h00"), UInt<48>("h0ffffffffffff"), UInt<48>("h00")) @[Bitwise.scala 72:12]
    node _io_out_rdata_T_9 = cat(io_out_rdata_hi_4, io_out_rdata_lo_4) @[Cat.scala 30:58]
    node io_out_rdata_lo_5 = bits(rdataSel, 31, 0) @[LSU.scala 92:36]
    node io_out_rdata_hi_5 = mux(UInt<1>("h00"), UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
    node _io_out_rdata_T_10 = cat(io_out_rdata_hi_5, io_out_rdata_lo_5) @[Cat.scala 30:58]
    node _io_out_rdata_T_11 = eq(UInt<1>("h00"), io.in.ctrl.funcOpType) @[utils.scala 8:34]
    node _io_out_rdata_T_12 = eq(UInt<1>("h01"), io.in.ctrl.funcOpType) @[utils.scala 8:34]
    node _io_out_rdata_T_13 = eq(UInt<2>("h02"), io.in.ctrl.funcOpType) @[utils.scala 8:34]
    node _io_out_rdata_T_14 = eq(UInt<2>("h03"), io.in.ctrl.funcOpType) @[utils.scala 8:34]
    node _io_out_rdata_T_15 = eq(UInt<3>("h04"), io.in.ctrl.funcOpType) @[utils.scala 8:34]
    node _io_out_rdata_T_16 = eq(UInt<3>("h05"), io.in.ctrl.funcOpType) @[utils.scala 8:34]
    node _io_out_rdata_T_17 = eq(UInt<3>("h06"), io.in.ctrl.funcOpType) @[utils.scala 8:34]
    node _io_out_rdata_T_18 = mux(_io_out_rdata_T_11, _io_out_rdata_T_1, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_rdata_T_19 = mux(_io_out_rdata_T_12, _io_out_rdata_T_3, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_rdata_T_20 = mux(_io_out_rdata_T_13, _io_out_rdata_T_5, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_rdata_T_21 = mux(_io_out_rdata_T_14, _io_out_rdata_T_7, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_rdata_T_22 = mux(_io_out_rdata_T_15, _io_out_rdata_T_8, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_rdata_T_23 = mux(_io_out_rdata_T_16, _io_out_rdata_T_9, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_rdata_T_24 = mux(_io_out_rdata_T_17, _io_out_rdata_T_10, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_rdata_T_25 = or(_io_out_rdata_T_18, _io_out_rdata_T_19) @[Mux.scala 27:72]
    node _io_out_rdata_T_26 = or(_io_out_rdata_T_25, _io_out_rdata_T_20) @[Mux.scala 27:72]
    node _io_out_rdata_T_27 = or(_io_out_rdata_T_26, _io_out_rdata_T_21) @[Mux.scala 27:72]
    node _io_out_rdata_T_28 = or(_io_out_rdata_T_27, _io_out_rdata_T_22) @[Mux.scala 27:72]
    node _io_out_rdata_T_29 = or(_io_out_rdata_T_28, _io_out_rdata_T_23) @[Mux.scala 27:72]
    node _io_out_rdata_T_30 = or(_io_out_rdata_T_29, _io_out_rdata_T_24) @[Mux.scala 27:72]
    wire _io_out_rdata_WIRE : UInt<64> @[Mux.scala 27:72]
    _io_out_rdata_WIRE <= _io_out_rdata_T_30 @[Mux.scala 27:72]
    io.out.rdata <= _io_out_rdata_WIRE @[LSU.scala 85:16]
    ram.wIdx <= idx @[LSU.scala 96:15]
    node _ram_io_wen_T = eq(io.in.ctrl.funcType, UInt<1>("h01")) @[LSU.scala 97:39]
    node _ram_io_wen_T_1 = and(_ram_io_wen_T, isStore) @[LSU.scala 97:57]
    ram.wen <= _ram_io_wen_T_1 @[LSU.scala 97:15]
    node size = bits(io.in.ctrl.funcOpType, 1, 0) @[LSU.scala 99:35]
    node ram_io_wdata_hi = bits(io.in.data.src2, 7, 0) @[LSU.scala 52:30]
    node ram_io_wdata_hi_1 = cat(ram_io_wdata_hi, ram_io_wdata_hi) @[Cat.scala 30:58]
    node ram_io_wdata_hi_2 = cat(ram_io_wdata_hi_1, ram_io_wdata_hi_1) @[Cat.scala 30:58]
    node _ram_io_wdata_T = cat(ram_io_wdata_hi_2, ram_io_wdata_hi_2) @[Cat.scala 30:58]
    node ram_io_wdata_hi_3 = bits(io.in.data.src2, 15, 0) @[LSU.scala 53:30]
    node ram_io_wdata_hi_4 = cat(ram_io_wdata_hi_3, ram_io_wdata_hi_3) @[Cat.scala 30:58]
    node _ram_io_wdata_T_1 = cat(ram_io_wdata_hi_4, ram_io_wdata_hi_4) @[Cat.scala 30:58]
    node ram_io_wdata_hi_5 = bits(io.in.data.src2, 31, 0) @[LSU.scala 54:30]
    node _ram_io_wdata_T_2 = cat(ram_io_wdata_hi_5, ram_io_wdata_hi_5) @[Cat.scala 30:58]
    node _ram_io_wdata_T_3 = eq(UInt<1>("h00"), size) @[utils.scala 8:34]
    node _ram_io_wdata_T_4 = eq(UInt<1>("h01"), size) @[utils.scala 8:34]
    node _ram_io_wdata_T_5 = eq(UInt<2>("h02"), size) @[utils.scala 8:34]
    node _ram_io_wdata_T_6 = eq(UInt<2>("h03"), size) @[utils.scala 8:34]
    node _ram_io_wdata_T_7 = mux(_ram_io_wdata_T_3, _ram_io_wdata_T, UInt<1>("h00")) @[Mux.scala 27:72]
    node _ram_io_wdata_T_8 = mux(_ram_io_wdata_T_4, _ram_io_wdata_T_1, UInt<1>("h00")) @[Mux.scala 27:72]
    node _ram_io_wdata_T_9 = mux(_ram_io_wdata_T_5, _ram_io_wdata_T_2, UInt<1>("h00")) @[Mux.scala 27:72]
    node _ram_io_wdata_T_10 = mux(_ram_io_wdata_T_6, io.in.data.src2, UInt<1>("h00")) @[Mux.scala 27:72]
    node _ram_io_wdata_T_11 = or(_ram_io_wdata_T_7, _ram_io_wdata_T_8) @[Mux.scala 27:72]
    node _ram_io_wdata_T_12 = or(_ram_io_wdata_T_11, _ram_io_wdata_T_9) @[Mux.scala 27:72]
    node _ram_io_wdata_T_13 = or(_ram_io_wdata_T_12, _ram_io_wdata_T_10) @[Mux.scala 27:72]
    wire _ram_io_wdata_WIRE : UInt<64> @[Mux.scala 27:72]
    _ram_io_wdata_WIRE <= _ram_io_wdata_T_13 @[Mux.scala 27:72]
    ram.wdata <= _ram_io_wdata_WIRE @[LSU.scala 100:16]
    node _ram_io_wmask_T = eq(UInt<1>("h00"), size) @[utils.scala 8:34]
    node _ram_io_wmask_T_1 = eq(UInt<1>("h01"), size) @[utils.scala 8:34]
    node _ram_io_wmask_T_2 = eq(UInt<2>("h02"), size) @[utils.scala 8:34]
    node _ram_io_wmask_T_3 = eq(UInt<2>("h03"), size) @[utils.scala 8:34]
    node _ram_io_wmask_T_4 = mux(_ram_io_wmask_T, UInt<64>("h0ff"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _ram_io_wmask_T_5 = mux(_ram_io_wmask_T_1, UInt<64>("h0ffff"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _ram_io_wmask_T_6 = mux(_ram_io_wmask_T_2, UInt<64>("h0ffffffff"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _ram_io_wmask_T_7 = mux(_ram_io_wmask_T_3, UInt<64>("h0ffffffffffffffff"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _ram_io_wmask_T_8 = or(_ram_io_wmask_T_4, _ram_io_wmask_T_5) @[Mux.scala 27:72]
    node _ram_io_wmask_T_9 = or(_ram_io_wmask_T_8, _ram_io_wmask_T_6) @[Mux.scala 27:72]
    node _ram_io_wmask_T_10 = or(_ram_io_wmask_T_9, _ram_io_wmask_T_7) @[Mux.scala 27:72]
    wire _ram_io_wmask_WIRE : UInt<64> @[Mux.scala 27:72]
    _ram_io_wmask_WIRE <= _ram_io_wmask_T_10 @[Mux.scala 27:72]
    ram.wmask <= _ram_io_wmask_WIRE @[LSU.scala 101:16]
    
  module BRU : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : {flip cf : {flip pc : UInt<64>, flip instr : UInt<32>}, ctrl : {src1Type : UInt<1>, src2Type : UInt<1>, funcType : UInt<3>, funcOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfrd : UInt<5>, rfWen : UInt<1>}, data : {src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64>}}, out : {newPC : UInt<64>, valid : UInt<1>}}
    
    wire src1 : UInt<64> @[BRU.scala 27:18]
    wire src2 : UInt<64> @[BRU.scala 28:18]
    src1 <= io.in.data.src1 @[BRU.scala 29:8]
    src2 <= io.in.data.src2 @[BRU.scala 30:8]
    node _io_out_valid_T = eq(io.in.ctrl.funcType, UInt<3>("h05")) @[BRU.scala 32:40]
    node _io_out_valid_T_1 = eq(src1, src2) @[BRU.scala 35:31]
    node _io_out_valid_T_2 = neq(src1, src2) @[BRU.scala 36:31]
    node _io_out_valid_T_3 = asSInt(src1) @[BRU.scala 37:37]
    node _io_out_valid_T_4 = asSInt(src2) @[BRU.scala 37:53]
    node _io_out_valid_T_5 = lt(_io_out_valid_T_3, _io_out_valid_T_4) @[BRU.scala 37:40]
    node _io_out_valid_T_6 = asSInt(src1) @[BRU.scala 38:37]
    node _io_out_valid_T_7 = asSInt(src2) @[BRU.scala 38:54]
    node _io_out_valid_T_8 = geq(_io_out_valid_T_6, _io_out_valid_T_7) @[BRU.scala 38:40]
    node _io_out_valid_T_9 = lt(src1, src2) @[BRU.scala 39:31]
    node _io_out_valid_T_10 = geq(src1, src2) @[BRU.scala 40:31]
    node _io_out_valid_T_11 = eq(UInt<7>("h058"), io.in.ctrl.funcOpType) @[utils.scala 8:34]
    node _io_out_valid_T_12 = eq(UInt<7>("h05a"), io.in.ctrl.funcOpType) @[utils.scala 8:34]
    node _io_out_valid_T_13 = eq(UInt<5>("h010"), io.in.ctrl.funcOpType) @[utils.scala 8:34]
    node _io_out_valid_T_14 = eq(UInt<5>("h011"), io.in.ctrl.funcOpType) @[utils.scala 8:34]
    node _io_out_valid_T_15 = eq(UInt<5>("h014"), io.in.ctrl.funcOpType) @[utils.scala 8:34]
    node _io_out_valid_T_16 = eq(UInt<5>("h015"), io.in.ctrl.funcOpType) @[utils.scala 8:34]
    node _io_out_valid_T_17 = eq(UInt<5>("h016"), io.in.ctrl.funcOpType) @[utils.scala 8:34]
    node _io_out_valid_T_18 = eq(UInt<5>("h017"), io.in.ctrl.funcOpType) @[utils.scala 8:34]
    node _io_out_valid_T_19 = mux(_io_out_valid_T_11, UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_valid_T_20 = mux(_io_out_valid_T_12, UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_valid_T_21 = mux(_io_out_valid_T_13, _io_out_valid_T_1, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_valid_T_22 = mux(_io_out_valid_T_14, _io_out_valid_T_2, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_valid_T_23 = mux(_io_out_valid_T_15, _io_out_valid_T_5, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_valid_T_24 = mux(_io_out_valid_T_16, _io_out_valid_T_8, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_valid_T_25 = mux(_io_out_valid_T_17, _io_out_valid_T_9, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_valid_T_26 = mux(_io_out_valid_T_18, _io_out_valid_T_10, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_valid_T_27 = or(_io_out_valid_T_19, _io_out_valid_T_20) @[Mux.scala 27:72]
    node _io_out_valid_T_28 = or(_io_out_valid_T_27, _io_out_valid_T_21) @[Mux.scala 27:72]
    node _io_out_valid_T_29 = or(_io_out_valid_T_28, _io_out_valid_T_22) @[Mux.scala 27:72]
    node _io_out_valid_T_30 = or(_io_out_valid_T_29, _io_out_valid_T_23) @[Mux.scala 27:72]
    node _io_out_valid_T_31 = or(_io_out_valid_T_30, _io_out_valid_T_24) @[Mux.scala 27:72]
    node _io_out_valid_T_32 = or(_io_out_valid_T_31, _io_out_valid_T_25) @[Mux.scala 27:72]
    node _io_out_valid_T_33 = or(_io_out_valid_T_32, _io_out_valid_T_26) @[Mux.scala 27:72]
    wire _io_out_valid_WIRE : UInt<1> @[Mux.scala 27:72]
    _io_out_valid_WIRE <= _io_out_valid_T_33 @[Mux.scala 27:72]
    node _io_out_valid_T_34 = and(_io_out_valid_T, _io_out_valid_WIRE) @[BRU.scala 32:58]
    io.out.valid <= _io_out_valid_T_34 @[BRU.scala 32:16]
    node _io_out_newPC_T = eq(io.in.ctrl.funcOpType, UInt<7>("h05a")) @[BRU.scala 43:46]
    node _io_out_newPC_T_1 = add(io.in.data.src1, io.in.data.imm) @[BRU.scala 44:21]
    node _io_out_newPC_T_2 = tail(_io_out_newPC_T_1, 1) @[BRU.scala 44:21]
    node _io_out_newPC_T_3 = add(io.in.cf.pc, io.in.data.imm) @[BRU.scala 44:51]
    node _io_out_newPC_T_4 = tail(_io_out_newPC_T_3, 1) @[BRU.scala 44:51]
    node _io_out_newPC_T_5 = mux(_io_out_newPC_T, _io_out_newPC_T_2, _io_out_newPC_T_4) @[BRU.scala 43:22]
    io.out.newPC <= _io_out_newPC_T_5 @[BRU.scala 43:16]
    
  module EXU : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : {flip cf : {flip pc : UInt<64>, flip instr : UInt<32>}, ctrl : {src1Type : UInt<1>, src2Type : UInt<1>, funcType : UInt<3>, funcOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfrd : UInt<5>, rfWen : UInt<1>}, data : {src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64>}}, flip reg_write_back : {flip addr : UInt<5>, flip data : UInt<64>, flip ena : UInt<1>}, branch : {newPC : UInt<64>, valid : UInt<1>}}
    
    inst alu of ALU @[EXU.scala 17:21]
    alu.clock <= clock
    alu.reset <= reset
    inst lsu of LSU @[EXU.scala 18:21]
    lsu.clock <= clock
    lsu.reset <= reset
    inst bru of BRU @[EXU.scala 19:21]
    bru.clock <= clock
    bru.reset <= reset
    wire alu_ena : UInt<1> @[EXU.scala 21:23]
    wire lsu_ena : UInt<1> @[EXU.scala 22:23]
    wire bru_ena : UInt<1> @[EXU.scala 23:23]
    node _alu_ena_T = eq(io.in.ctrl.funcType, UInt<1>("h00")) @[EXU.scala 24:36]
    alu_ena <= _alu_ena_T @[EXU.scala 24:13]
    node _lsu_ena_T = eq(io.in.ctrl.funcType, UInt<1>("h01")) @[EXU.scala 25:36]
    lsu_ena <= _lsu_ena_T @[EXU.scala 25:13]
    node _bru_ena_T = eq(io.in.ctrl.funcType, UInt<3>("h05")) @[EXU.scala 26:36]
    bru_ena <= _bru_ena_T @[EXU.scala 26:13]
    lsu.io.valid <= lsu_ena @[EXU.scala 27:18]
    alu.io.in.data.imm <= io.in.data.imm @[EXU.scala 29:15]
    alu.io.in.data.src2 <= io.in.data.src2 @[EXU.scala 29:15]
    alu.io.in.data.src1 <= io.in.data.src1 @[EXU.scala 29:15]
    alu.io.in.ctrl.rfWen <= io.in.ctrl.rfWen @[EXU.scala 29:15]
    alu.io.in.ctrl.rfrd <= io.in.ctrl.rfrd @[EXU.scala 29:15]
    alu.io.in.ctrl.rfSrc2 <= io.in.ctrl.rfSrc2 @[EXU.scala 29:15]
    alu.io.in.ctrl.rfSrc1 <= io.in.ctrl.rfSrc1 @[EXU.scala 29:15]
    alu.io.in.ctrl.funcOpType <= io.in.ctrl.funcOpType @[EXU.scala 29:15]
    alu.io.in.ctrl.funcType <= io.in.ctrl.funcType @[EXU.scala 29:15]
    alu.io.in.ctrl.src2Type <= io.in.ctrl.src2Type @[EXU.scala 29:15]
    alu.io.in.ctrl.src1Type <= io.in.ctrl.src1Type @[EXU.scala 29:15]
    alu.io.in.cf.instr <= io.in.cf.instr @[EXU.scala 29:15]
    alu.io.in.cf.pc <= io.in.cf.pc @[EXU.scala 29:15]
    lsu.io.in.data.imm <= io.in.data.imm @[EXU.scala 30:15]
    lsu.io.in.data.src2 <= io.in.data.src2 @[EXU.scala 30:15]
    lsu.io.in.data.src1 <= io.in.data.src1 @[EXU.scala 30:15]
    lsu.io.in.ctrl.rfWen <= io.in.ctrl.rfWen @[EXU.scala 30:15]
    lsu.io.in.ctrl.rfrd <= io.in.ctrl.rfrd @[EXU.scala 30:15]
    lsu.io.in.ctrl.rfSrc2 <= io.in.ctrl.rfSrc2 @[EXU.scala 30:15]
    lsu.io.in.ctrl.rfSrc1 <= io.in.ctrl.rfSrc1 @[EXU.scala 30:15]
    lsu.io.in.ctrl.funcOpType <= io.in.ctrl.funcOpType @[EXU.scala 30:15]
    lsu.io.in.ctrl.funcType <= io.in.ctrl.funcType @[EXU.scala 30:15]
    lsu.io.in.ctrl.src2Type <= io.in.ctrl.src2Type @[EXU.scala 30:15]
    lsu.io.in.ctrl.src1Type <= io.in.ctrl.src1Type @[EXU.scala 30:15]
    lsu.io.in.cf.instr <= io.in.cf.instr @[EXU.scala 30:15]
    lsu.io.in.cf.pc <= io.in.cf.pc @[EXU.scala 30:15]
    bru.io.in.data.imm <= io.in.data.imm @[EXU.scala 31:15]
    bru.io.in.data.src2 <= io.in.data.src2 @[EXU.scala 31:15]
    bru.io.in.data.src1 <= io.in.data.src1 @[EXU.scala 31:15]
    bru.io.in.ctrl.rfWen <= io.in.ctrl.rfWen @[EXU.scala 31:15]
    bru.io.in.ctrl.rfrd <= io.in.ctrl.rfrd @[EXU.scala 31:15]
    bru.io.in.ctrl.rfSrc2 <= io.in.ctrl.rfSrc2 @[EXU.scala 31:15]
    bru.io.in.ctrl.rfSrc1 <= io.in.ctrl.rfSrc1 @[EXU.scala 31:15]
    bru.io.in.ctrl.funcOpType <= io.in.ctrl.funcOpType @[EXU.scala 31:15]
    bru.io.in.ctrl.funcType <= io.in.ctrl.funcType @[EXU.scala 31:15]
    bru.io.in.ctrl.src2Type <= io.in.ctrl.src2Type @[EXU.scala 31:15]
    bru.io.in.ctrl.src1Type <= io.in.ctrl.src1Type @[EXU.scala 31:15]
    bru.io.in.cf.instr <= io.in.cf.instr @[EXU.scala 31:15]
    bru.io.in.cf.pc <= io.in.cf.pc @[EXU.scala 31:15]
    wire wb_ena : UInt<1> @[EXU.scala 33:22]
    when alu_ena : @[EXU.scala 34:19]
      wb_ena <= UInt<1>("h01") @[EXU.scala 35:16]
      skip @[EXU.scala 34:19]
    else : @[EXU.scala 36:25]
      when lsu_ena : @[EXU.scala 36:25]
        node _wb_ena_T = bits(io.in.ctrl.funcOpType, 3, 3) @[LSU.scala 25:39]
        node _wb_ena_T_1 = eq(_wb_ena_T, UInt<1>("h00")) @[LSU.scala 26:34]
        node _wb_ena_T_2 = mux(_wb_ena_T_1, UInt<1>("h01"), UInt<1>("h00")) @[EXU.scala 37:22]
        wb_ena <= _wb_ena_T_2 @[EXU.scala 37:16]
        skip @[EXU.scala 36:25]
      else : @[EXU.scala 38:17]
        node _wb_ena_T_3 = bits(io.in.ctrl.funcOpType, 6, 6) @[BRU.scala 17:39]
        node _wb_ena_T_4 = mux(_wb_ena_T_3, UInt<1>("h01"), UInt<1>("h00")) @[EXU.scala 39:22]
        wb_ena <= _wb_ena_T_4 @[EXU.scala 39:16]
        skip @[EXU.scala 38:17]
    when alu_ena : @[EXU.scala 42:19]
      io.reg_write_back.data <= alu.io.out.aluRes @[EXU.scala 43:32]
      io.reg_write_back.ena <= wb_ena @[EXU.scala 45:32]
      io.reg_write_back.addr <= io.in.ctrl.rfrd @[EXU.scala 46:32]
      skip @[EXU.scala 42:19]
    else : @[EXU.scala 47:68]
      node _T = bits(io.in.ctrl.funcOpType, 3, 3) @[LSU.scala 25:39]
      node _T_1 = eq(_T, UInt<1>("h00")) @[LSU.scala 26:34]
      node _T_2 = and(lsu_ena, _T_1) @[EXU.scala 47:24]
      when _T_2 : @[EXU.scala 47:68]
        io.reg_write_back.data <= lsu.io.out.rdata @[EXU.scala 48:32]
        io.reg_write_back.ena <= wb_ena @[EXU.scala 50:32]
        io.reg_write_back.addr <= io.in.ctrl.rfrd @[EXU.scala 51:32]
        skip @[EXU.scala 47:68]
      else : @[EXU.scala 52:17]
        node _io_reg_write_back_data_T = add(io.in.cf.pc, UInt<3>("h04")) @[EXU.scala 53:47]
        node _io_reg_write_back_data_T_1 = tail(_io_reg_write_back_data_T, 1) @[EXU.scala 53:47]
        io.reg_write_back.data <= _io_reg_write_back_data_T_1 @[EXU.scala 53:32]
        io.reg_write_back.ena <= wb_ena @[EXU.scala 55:32]
        io.reg_write_back.addr <= io.in.ctrl.rfrd @[EXU.scala 56:32]
        skip @[EXU.scala 52:17]
    io.branch.valid <= bru.io.out.valid @[EXU.scala 59:21]
    io.branch.newPC <= bru.io.out.newPC @[EXU.scala 60:21]
    
  module WBU : 
    input clock : Clock
    input reset : Reset
    output io : {in : {flip addr : UInt<5>, flip data : UInt<64>, flip ena : UInt<1>}, flip out : {flip addr : UInt<5>, flip data : UInt<64>, flip ena : UInt<1>}}
    
    io.out.ena <= io.in.ena @[WBU.scala 17:12]
    io.out.data <= io.in.data @[WBU.scala 17:12]
    io.out.addr <= io.in.addr @[WBU.scala 17:12]
    
  extmodule DifftestArchIntRegState : 
    input clock : Clock
    input coreid : UInt<8>
    input gpr : UInt<64>[32]
    
    defname = DifftestArchIntRegState
    
    
  module Regfile : 
    input clock : Clock
    input reset : Reset
    output io : {src1 : {flip addr : UInt<5>, data : UInt<64>}, src2 : {flip addr : UInt<5>, data : UInt<64>}, rd : {flip addr : UInt<5>, flip data : UInt<64>, flip ena : UInt<1>}}
    
    wire _regs_WIRE : UInt<64>[32] @[regfile.scala 7:29]
    _regs_WIRE[0] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[1] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[2] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[3] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[4] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[5] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[6] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[7] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[8] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[9] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[10] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[11] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[12] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[13] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[14] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[15] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[16] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[17] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[18] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[19] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[20] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[21] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[22] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[23] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[24] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[25] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[26] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[27] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[28] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[29] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[30] <= UInt<64>("h00") @[regfile.scala 7:29]
    _regs_WIRE[31] <= UInt<64>("h00") @[regfile.scala 7:29]
    reg regs : UInt<64>[32], clock with : (reset => (reset, _regs_WIRE)) @[regfile.scala 7:21]
    when io.rd.ena : @[regfile.scala 52:19]
      node _T = neq(io.rd.addr, UInt<1>("h00")) @[regfile.scala 10:15]
      when _T : @[regfile.scala 10:24]
        regs[io.rd.addr] <= io.rd.data @[regfile.scala 11:18]
        skip @[regfile.scala 10:24]
      skip @[regfile.scala 52:19]
    io.src1.data <= regs[io.src1.addr] @[regfile.scala 55:16]
    io.src2.data <= regs[io.src2.addr] @[regfile.scala 56:16]
    inst mod of DifftestArchIntRegState @[regfile.scala 59:19]
    mod.gpr is invalid
    mod.coreid is invalid
    mod.clock is invalid
    mod.clock <= clock @[regfile.scala 60:16]
    mod.coreid <= UInt<1>("h00") @[regfile.scala 61:17]
    reg REG : UInt<64>[32], clock @[regfile.scala 62:24]
    REG[0] <= regs[0] @[regfile.scala 62:24]
    REG[1] <= regs[1] @[regfile.scala 62:24]
    REG[2] <= regs[2] @[regfile.scala 62:24]
    REG[3] <= regs[3] @[regfile.scala 62:24]
    REG[4] <= regs[4] @[regfile.scala 62:24]
    REG[5] <= regs[5] @[regfile.scala 62:24]
    REG[6] <= regs[6] @[regfile.scala 62:24]
    REG[7] <= regs[7] @[regfile.scala 62:24]
    REG[8] <= regs[8] @[regfile.scala 62:24]
    REG[9] <= regs[9] @[regfile.scala 62:24]
    REG[10] <= regs[10] @[regfile.scala 62:24]
    REG[11] <= regs[11] @[regfile.scala 62:24]
    REG[12] <= regs[12] @[regfile.scala 62:24]
    REG[13] <= regs[13] @[regfile.scala 62:24]
    REG[14] <= regs[14] @[regfile.scala 62:24]
    REG[15] <= regs[15] @[regfile.scala 62:24]
    REG[16] <= regs[16] @[regfile.scala 62:24]
    REG[17] <= regs[17] @[regfile.scala 62:24]
    REG[18] <= regs[18] @[regfile.scala 62:24]
    REG[19] <= regs[19] @[regfile.scala 62:24]
    REG[20] <= regs[20] @[regfile.scala 62:24]
    REG[21] <= regs[21] @[regfile.scala 62:24]
    REG[22] <= regs[22] @[regfile.scala 62:24]
    REG[23] <= regs[23] @[regfile.scala 62:24]
    REG[24] <= regs[24] @[regfile.scala 62:24]
    REG[25] <= regs[25] @[regfile.scala 62:24]
    REG[26] <= regs[26] @[regfile.scala 62:24]
    REG[27] <= regs[27] @[regfile.scala 62:24]
    REG[28] <= regs[28] @[regfile.scala 62:24]
    REG[29] <= regs[29] @[regfile.scala 62:24]
    REG[30] <= regs[30] @[regfile.scala 62:24]
    REG[31] <= regs[31] @[regfile.scala 62:24]
    mod.gpr[0] <= REG[0] @[regfile.scala 62:14]
    mod.gpr[1] <= REG[1] @[regfile.scala 62:14]
    mod.gpr[2] <= REG[2] @[regfile.scala 62:14]
    mod.gpr[3] <= REG[3] @[regfile.scala 62:14]
    mod.gpr[4] <= REG[4] @[regfile.scala 62:14]
    mod.gpr[5] <= REG[5] @[regfile.scala 62:14]
    mod.gpr[6] <= REG[6] @[regfile.scala 62:14]
    mod.gpr[7] <= REG[7] @[regfile.scala 62:14]
    mod.gpr[8] <= REG[8] @[regfile.scala 62:14]
    mod.gpr[9] <= REG[9] @[regfile.scala 62:14]
    mod.gpr[10] <= REG[10] @[regfile.scala 62:14]
    mod.gpr[11] <= REG[11] @[regfile.scala 62:14]
    mod.gpr[12] <= REG[12] @[regfile.scala 62:14]
    mod.gpr[13] <= REG[13] @[regfile.scala 62:14]
    mod.gpr[14] <= REG[14] @[regfile.scala 62:14]
    mod.gpr[15] <= REG[15] @[regfile.scala 62:14]
    mod.gpr[16] <= REG[16] @[regfile.scala 62:14]
    mod.gpr[17] <= REG[17] @[regfile.scala 62:14]
    mod.gpr[18] <= REG[18] @[regfile.scala 62:14]
    mod.gpr[19] <= REG[19] @[regfile.scala 62:14]
    mod.gpr[20] <= REG[20] @[regfile.scala 62:14]
    mod.gpr[21] <= REG[21] @[regfile.scala 62:14]
    mod.gpr[22] <= REG[22] @[regfile.scala 62:14]
    mod.gpr[23] <= REG[23] @[regfile.scala 62:14]
    mod.gpr[24] <= REG[24] @[regfile.scala 62:14]
    mod.gpr[25] <= REG[25] @[regfile.scala 62:14]
    mod.gpr[26] <= REG[26] @[regfile.scala 62:14]
    mod.gpr[27] <= REG[27] @[regfile.scala 62:14]
    mod.gpr[28] <= REG[28] @[regfile.scala 62:14]
    mod.gpr[29] <= REG[29] @[regfile.scala 62:14]
    mod.gpr[30] <= REG[30] @[regfile.scala 62:14]
    mod.gpr[31] <= REG[31] @[regfile.scala 62:14]
    
  module Top : 
    input clock : Clock
    input reset : Reset
    output io : {flip out : {flip pc : UInt<64>, flip instr : UInt<32>}, valid : UInt<1>, flip diffreg : {flip addr : UInt<5>, flip data : UInt<64>, flip ena : UInt<1>}}
    
    inst ifu of IFU @[Top.scala 22:21]
    ifu.clock <= clock
    ifu.reset <= reset
    inst idu of IDU @[Top.scala 23:21]
    idu.clock <= clock
    idu.reset <= reset
    inst dis of IDUtoEXU @[Top.scala 24:21]
    dis.clock <= clock
    dis.reset <= reset
    inst exu of EXU @[Top.scala 25:21]
    exu.clock <= clock
    exu.reset <= reset
    inst wbu of WBU @[Top.scala 26:21]
    wbu.clock <= clock
    wbu.reset <= reset
    inst reg of Regfile @[Top.scala 27:21]
    reg.clock <= clock
    reg.reset <= reset
    idu.io.in.instr <= ifu.io.out.instr @[Top.scala 29:29]
    idu.io.in.pc <= ifu.io.out.pc @[Top.scala 29:29]
    dis.io.in.data.imm <= idu.io.out.data.imm @[Top.scala 30:29]
    dis.io.in.data.src2 <= idu.io.out.data.src2 @[Top.scala 30:29]
    dis.io.in.data.src1 <= idu.io.out.data.src1 @[Top.scala 30:29]
    dis.io.in.ctrl.rfWen <= idu.io.out.ctrl.rfWen @[Top.scala 30:29]
    dis.io.in.ctrl.rfrd <= idu.io.out.ctrl.rfrd @[Top.scala 30:29]
    dis.io.in.ctrl.rfSrc2 <= idu.io.out.ctrl.rfSrc2 @[Top.scala 30:29]
    dis.io.in.ctrl.rfSrc1 <= idu.io.out.ctrl.rfSrc1 @[Top.scala 30:29]
    dis.io.in.ctrl.funcOpType <= idu.io.out.ctrl.funcOpType @[Top.scala 30:29]
    dis.io.in.ctrl.funcType <= idu.io.out.ctrl.funcType @[Top.scala 30:29]
    dis.io.in.ctrl.src2Type <= idu.io.out.ctrl.src2Type @[Top.scala 30:29]
    dis.io.in.ctrl.src1Type <= idu.io.out.ctrl.src1Type @[Top.scala 30:29]
    dis.io.in.cf.instr <= idu.io.out.cf.instr @[Top.scala 30:29]
    dis.io.in.cf.pc <= idu.io.out.cf.pc @[Top.scala 30:29]
    exu.io.in.data.imm <= dis.io.out.data.imm @[Top.scala 31:29]
    exu.io.in.data.src2 <= dis.io.out.data.src2 @[Top.scala 31:29]
    exu.io.in.data.src1 <= dis.io.out.data.src1 @[Top.scala 31:29]
    exu.io.in.ctrl.rfWen <= dis.io.out.ctrl.rfWen @[Top.scala 31:29]
    exu.io.in.ctrl.rfrd <= dis.io.out.ctrl.rfrd @[Top.scala 31:29]
    exu.io.in.ctrl.rfSrc2 <= dis.io.out.ctrl.rfSrc2 @[Top.scala 31:29]
    exu.io.in.ctrl.rfSrc1 <= dis.io.out.ctrl.rfSrc1 @[Top.scala 31:29]
    exu.io.in.ctrl.funcOpType <= dis.io.out.ctrl.funcOpType @[Top.scala 31:29]
    exu.io.in.ctrl.funcType <= dis.io.out.ctrl.funcType @[Top.scala 31:29]
    exu.io.in.ctrl.src2Type <= dis.io.out.ctrl.src2Type @[Top.scala 31:29]
    exu.io.in.ctrl.src1Type <= dis.io.out.ctrl.src1Type @[Top.scala 31:29]
    exu.io.in.cf.instr <= dis.io.out.cf.instr @[Top.scala 31:29]
    exu.io.in.cf.pc <= dis.io.out.cf.pc @[Top.scala 31:29]
    wbu.io.in.ena <= exu.io.reg_write_back.ena @[Top.scala 32:29]
    wbu.io.in.data <= exu.io.reg_write_back.data @[Top.scala 32:29]
    wbu.io.in.addr <= exu.io.reg_write_back.addr @[Top.scala 32:29]
    ifu.io.in.valid <= exu.io.branch.valid @[Top.scala 33:29]
    ifu.io.in.newPC <= exu.io.branch.newPC @[Top.scala 33:29]
    reg.io.rd.ena <= wbu.io.out.ena @[Top.scala 34:29]
    reg.io.rd.data <= wbu.io.out.data @[Top.scala 34:29]
    reg.io.rd.addr <= wbu.io.out.addr @[Top.scala 34:29]
    reg.io.src1.addr <= idu.io.out.ctrl.rfSrc1 @[Top.scala 35:22]
    reg.io.src2.addr <= idu.io.out.ctrl.rfSrc2 @[Top.scala 36:22]
    dis.io.src1 <= reg.io.src1.data @[Top.scala 37:22]
    dis.io.src2 <= reg.io.src2.data @[Top.scala 38:22]
    io.diffreg.ena <= wbu.io.out.ena @[Top.scala 40:29]
    io.diffreg.data <= wbu.io.out.data @[Top.scala 40:29]
    io.diffreg.addr <= wbu.io.out.addr @[Top.scala 40:29]
    io.out.pc <= ifu.io.out.pc @[Top.scala 42:18]
    io.out.instr <= ifu.io.out.instr @[Top.scala 43:18]
    node _io_valid_T = asUInt(reset) @[Top.scala 45:18]
    node _io_valid_T_1 = not(_io_valid_T) @[Top.scala 45:5]
    io.valid <= _io_valid_T_1 @[Top.scala 44:18]
    
  extmodule DifftestInstrCommit : 
    input clock : Clock
    input coreid : UInt<8>
    input index : UInt<8>
    input valid : UInt<1>
    input pc : UInt<64>
    input instr : UInt<32>
    input skip : UInt<1>
    input isRVC : UInt<1>
    input scFailed : UInt<1>
    input wen : UInt<1>
    input wdata : UInt<64>
    input wdest : UInt<8>
    
    defname = DifftestInstrCommit
    
    
  extmodule DifftestCSRState : 
    input clock : Clock
    input coreid : UInt<8>
    input priviledgeMode : UInt<2>
    input mstatus : UInt<64>
    input sstatus : UInt<64>
    input mepc : UInt<64>
    input sepc : UInt<64>
    input mtval : UInt<64>
    input stval : UInt<64>
    input mtvec : UInt<64>
    input stvec : UInt<64>
    input mcause : UInt<64>
    input scause : UInt<64>
    input satp : UInt<64>
    input mip : UInt<64>
    input mie : UInt<64>
    input mscratch : UInt<64>
    input sscratch : UInt<64>
    input mideleg : UInt<64>
    input medeleg : UInt<64>
    
    defname = DifftestCSRState
    
    
  extmodule DifftestTrapEvent : 
    input clock : Clock
    input coreid : UInt<8>
    input valid : UInt<1>
    input code : UInt<3>
    input pc : UInt<64>
    input cycleCnt : UInt<64>
    input instrCnt : UInt<64>
    
    defname = DifftestTrapEvent
    
    
  module SimTop : 
    input clock : Clock
    input reset : UInt<1>
    output io : {logCtrl : {flip log_begin : UInt<64>, flip log_end : UInt<64>, flip log_level : UInt<64>}, perfInfo : {flip clean : UInt<1>, flip dump : UInt<1>}, uart : {out : {valid : UInt<1>, ch : UInt<8>}, in : {valid : UInt<1>, flip ch : UInt<8>}}}
    
    io.uart.in.valid <= UInt<1>("h00") @[SimTop.scala 18:21]
    io.uart.out.valid <= UInt<1>("h00") @[SimTop.scala 19:21]
    io.uart.out.ch <= UInt<1>("h00") @[SimTop.scala 20:19]
    inst rvcore of Top @[SimTop.scala 21:22]
    rvcore.clock <= clock
    rvcore.reset <= reset
    inst instrCommit of DifftestInstrCommit @[SimTop.scala 24:27]
    instrCommit.wdest is invalid
    instrCommit.wdata is invalid
    instrCommit.wen is invalid
    instrCommit.scFailed is invalid
    instrCommit.isRVC is invalid
    instrCommit.skip is invalid
    instrCommit.instr is invalid
    instrCommit.pc is invalid
    instrCommit.valid is invalid
    instrCommit.index is invalid
    instrCommit.coreid is invalid
    instrCommit.clock is invalid
    instrCommit.clock <= clock @[SimTop.scala 25:24]
    instrCommit.coreid <= UInt<1>("h00") @[SimTop.scala 26:25]
    instrCommit.index <= UInt<1>("h00") @[SimTop.scala 27:24]
    instrCommit.skip <= UInt<1>("h00") @[SimTop.scala 28:23]
    instrCommit.isRVC <= UInt<1>("h00") @[SimTop.scala 29:24]
    instrCommit.scFailed <= UInt<1>("h00") @[SimTop.scala 30:27]
    reg REG : UInt<1>, clock @[SimTop.scala 32:42]
    REG <= rvcore.io.valid @[SimTop.scala 32:42]
    reg REG_1 : UInt<1>, clock @[SimTop.scala 32:34]
    REG_1 <= REG @[SimTop.scala 32:34]
    instrCommit.valid <= REG_1 @[SimTop.scala 32:24]
    reg REG_2 : UInt, clock @[SimTop.scala 33:42]
    REG_2 <= rvcore.io.out.pc @[SimTop.scala 33:42]
    reg REG_3 : UInt, clock @[SimTop.scala 33:34]
    REG_3 <= REG_2 @[SimTop.scala 33:34]
    instrCommit.pc <= REG_3 @[SimTop.scala 33:24]
    reg REG_4 : UInt, clock @[SimTop.scala 35:42]
    REG_4 <= rvcore.io.out.instr @[SimTop.scala 35:42]
    reg REG_5 : UInt, clock @[SimTop.scala 35:34]
    REG_5 <= REG_4 @[SimTop.scala 35:34]
    instrCommit.instr <= REG_5 @[SimTop.scala 35:24]
    reg REG_6 : UInt<1>, clock @[SimTop.scala 37:42]
    REG_6 <= rvcore.io.diffreg.ena @[SimTop.scala 37:42]
    reg REG_7 : UInt<1>, clock @[SimTop.scala 37:34]
    REG_7 <= REG_6 @[SimTop.scala 37:34]
    instrCommit.wen <= REG_7 @[SimTop.scala 37:24]
    reg REG_8 : UInt, clock @[SimTop.scala 38:42]
    REG_8 <= rvcore.io.diffreg.data @[SimTop.scala 38:42]
    reg REG_9 : UInt, clock @[SimTop.scala 38:34]
    REG_9 <= REG_8 @[SimTop.scala 38:34]
    instrCommit.wdata <= REG_9 @[SimTop.scala 38:24]
    reg REG_10 : UInt, clock @[SimTop.scala 39:42]
    REG_10 <= rvcore.io.diffreg.addr @[SimTop.scala 39:42]
    reg REG_11 : UInt, clock @[SimTop.scala 39:34]
    REG_11 <= REG_10 @[SimTop.scala 39:34]
    instrCommit.wdest <= REG_11 @[SimTop.scala 39:24]
    inst csrCommit of DifftestCSRState @[SimTop.scala 42:25]
    csrCommit.medeleg is invalid
    csrCommit.mideleg is invalid
    csrCommit.sscratch is invalid
    csrCommit.mscratch is invalid
    csrCommit.mie is invalid
    csrCommit.mip is invalid
    csrCommit.satp is invalid
    csrCommit.scause is invalid
    csrCommit.mcause is invalid
    csrCommit.stvec is invalid
    csrCommit.mtvec is invalid
    csrCommit.stval is invalid
    csrCommit.mtval is invalid
    csrCommit.sepc is invalid
    csrCommit.mepc is invalid
    csrCommit.sstatus is invalid
    csrCommit.mstatus is invalid
    csrCommit.priviledgeMode is invalid
    csrCommit.coreid is invalid
    csrCommit.clock is invalid
    csrCommit.clock <= clock @[SimTop.scala 43:31]
    csrCommit.priviledgeMode <= UInt<1>("h00") @[SimTop.scala 44:31]
    csrCommit.mstatus <= UInt<1>("h00") @[SimTop.scala 45:31]
    csrCommit.sstatus <= UInt<1>("h00") @[SimTop.scala 46:31]
    csrCommit.mepc <= UInt<1>("h00") @[SimTop.scala 47:31]
    csrCommit.sepc <= UInt<1>("h00") @[SimTop.scala 48:31]
    csrCommit.mtval <= UInt<1>("h00") @[SimTop.scala 49:31]
    csrCommit.stval <= UInt<1>("h00") @[SimTop.scala 50:31]
    csrCommit.mtvec <= UInt<1>("h00") @[SimTop.scala 51:31]
    csrCommit.stvec <= UInt<1>("h00") @[SimTop.scala 52:31]
    csrCommit.mcause <= UInt<1>("h00") @[SimTop.scala 53:31]
    csrCommit.scause <= UInt<1>("h00") @[SimTop.scala 54:31]
    csrCommit.satp <= UInt<1>("h00") @[SimTop.scala 55:31]
    csrCommit.mip <= UInt<1>("h00") @[SimTop.scala 56:31]
    csrCommit.mie <= UInt<1>("h00") @[SimTop.scala 57:31]
    csrCommit.mscratch <= UInt<1>("h00") @[SimTop.scala 58:31]
    csrCommit.sscratch <= UInt<1>("h00") @[SimTop.scala 59:31]
    csrCommit.mideleg <= UInt<1>("h00") @[SimTop.scala 60:31]
    csrCommit.medeleg <= UInt<1>("h00") @[SimTop.scala 61:31]
    inst trap of DifftestTrapEvent @[SimTop.scala 63:20]
    trap.instrCnt is invalid
    trap.cycleCnt is invalid
    trap.pc is invalid
    trap.code is invalid
    trap.valid is invalid
    trap.coreid is invalid
    trap.clock is invalid
    trap.clock <= clock @[SimTop.scala 64:20]
    trap.coreid <= UInt<1>("h00") @[SimTop.scala 65:20]
    reg REG_12 : UInt, clock @[SimTop.scala 66:38]
    REG_12 <= rvcore.io.out.instr @[SimTop.scala 66:38]
    reg REG_13 : UInt, clock @[SimTop.scala 66:30]
    REG_13 <= REG_12 @[SimTop.scala 66:30]
    node _T = eq(REG_13, UInt<7>("h06b")) @[SimTop.scala 66:61]
    trap.valid <= _T @[SimTop.scala 66:20]
    trap.code <= UInt<1>("h00") @[SimTop.scala 67:20]
    reg REG_14 : UInt, clock @[SimTop.scala 68:38]
    REG_14 <= rvcore.io.out.pc @[SimTop.scala 68:38]
    reg REG_15 : UInt, clock @[SimTop.scala 68:30]
    REG_15 <= REG_14 @[SimTop.scala 68:30]
    trap.pc <= REG_15 @[SimTop.scala 68:20]
    trap.cycleCnt <= UInt<1>("h00") @[SimTop.scala 69:20]
    trap.instrCnt <= UInt<1>("h00") @[SimTop.scala 70:20]
    
